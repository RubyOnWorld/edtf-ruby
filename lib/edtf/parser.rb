#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'strscan'

module EDTF
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 194)

  def parse(input)
    @yydebug = !!ENV['DEBUG']
    scan(input)
    do_parse
  end
  
  def next_token
    @stack.shift
  end

  def on_error(tid, val, vstack)
    warn "failed to parse extended date time %s (%s) %s" % [val.inspect, token_to_str(tid) || '?', vstack.inspect]
  end

  def scan(input)
    @src = StringScanner.new(input)
    @stack = []
    tokenize
  end

  private

  def tokenize
    until @src.eos?
      case
      when @src.scan(/T/)
        @stack << [:T, @src.matched]
      when @src.scan(/Z/)
        @stack << [:Z, @src.matched]
      when @src.scan(/\?/)
        @stack << [:UNCERTAIN, @src.matched]
      when @src.scan(/~/)
        @stack << [:APPROXIMATE, @src.matched]
      when @src.scan(/open/i)
        @stack << [:OPEN, @src.matched]
      when @src.scan(/unkn?own/i) # matches 'unkown' typo too
        @stack << [:UNKNOWN, @src.matched]
      when @src.scan(/u/)
        @stack << [:UNSPECIFIED, @src.matched]
      when @src.scan(/y/)
        @stack << [:LONGYEAR, @src.matched]
      when @src.scan(/\+/)
        @stack << [:PLUS, @src.matched]
      when @src.scan(/-/)
        @stack << [:MINUS, @src.matched]
      when @src.scan(/:/)
        @stack << [:COLON, @src.matched]
      when @src.scan(/\//)
        @stack << [:SLASH, @src.matched]
      when @src.scan(/\d/)
        @stack << [['D', @src.matched].join.intern, @src.matched]
      else @src.scan(/./)
        @stack << [:UNMATCHED, @src.rest]
      end
    end
  
    @stack
  end


# -*- racc -*-
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    11,   134,   129,    25,    27,    28,    29,    30,    31,    32,
    33,    34,    35,    48,    37,   143,    23,    11,    24,   -52,
    25,    27,    28,    29,    30,    31,    32,    33,    34,    35,
    39,    40,    50,    23,    87,   146,    27,    28,    29,    30,
    31,    32,    33,    34,    35,    25,    27,    28,    29,    30,
    31,    32,    33,    34,    35,    68,    69,    82,    72,    60,
    73,    76,    68,    69,    67,   110,   111,   112,   148,   147,
    71,    59,    60,    57,    65,    25,    27,    28,    29,    30,
    31,    32,    33,    34,    35,    39,    40,   124,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,   172,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,   149,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    97,    98,
    99,   100,   114,   115,   116,   117,   118,   119,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,   150,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,   102,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    25,    27,
    28,    29,    30,    31,    32,    33,    34,    35,   152,    27,
    28,    29,    30,    31,    32,    33,    34,    35,    27,    28,
    29,    30,    31,    32,    33,    34,    35,    27,    28,    29,
    30,    31,    32,    33,    34,    35,    27,    28,    29,    30,
    31,    32,    33,    34,    35,   137,    60,    73,   139,   140,
   141,   137,    60,    73,   139,   140,   141,   169,    60,    73,
   139,   140,   141,   137,    60,    73,   139,   140,   141,    72,
    60,    73,   139,   140,   141,    97,    98,    99,   100,    96,
    72,    60,    73,    76,   105,   106,   107,   108,   110,   111,
   112,    92,    94,    93,   120,   121,   130,   129,   125,    36,
   113,   151,   104,   144,    95,    41,   156,   157,    42,    79,
   160,   161,   162,    78,   165,   166,   167,    62,    52,   170,
   171,   -53,   173,   174 ]

racc_action_check = [
     0,    94,    94,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    22,     4,    96,     0,    48,     0,     4,
    48,    48,    48,    48,    48,    48,    48,    48,    48,    48,
     4,     4,    24,    48,    48,   128,    24,    24,    24,    24,
    24,    24,    24,    24,    24,    47,    47,    47,    47,    47,
    47,    47,    47,    47,    47,    78,    78,    47,    42,    42,
    42,    42,    41,    41,    41,   129,   129,   129,   129,   129,
    42,    37,    37,    37,    41,    81,    81,    81,    81,    81,
    81,    81,    81,    81,    81,    83,    83,    81,   122,   122,
   122,   122,   122,   122,   122,   122,   122,   122,   169,   169,
   169,   169,   169,   169,   169,   169,   169,   169,   126,   126,
   126,   126,   126,   126,   126,   126,   126,   126,    90,    90,
    90,    90,    90,    90,    90,    90,    90,    90,    89,    89,
    89,    89,    89,    89,    89,    89,    89,    89,    12,    12,
    12,    12,    12,    12,    12,    12,    12,    12,    11,    11,
    11,    11,    11,    11,    11,    11,    11,    11,   130,   130,
   130,   130,   130,   130,   130,   130,   130,   130,    80,    80,
    80,    80,    80,    80,    80,    80,    80,    80,    46,    46,
    46,    46,    46,    46,    46,    46,    46,    46,   145,   145,
   145,   145,   145,   145,   145,   145,   145,   145,   141,   141,
   141,   141,   141,   141,   141,   141,   141,   141,    49,    49,
    49,    49,    49,    49,    49,    49,    49,    49,    73,    73,
    73,    73,    73,    73,    73,    73,    73,    73,    51,    51,
    51,    51,    51,    51,    51,    51,    51,    51,   134,   134,
   134,   134,   134,   134,   134,   134,   134,   134,   140,   140,
   140,   140,   140,   140,   140,   140,   140,   140,   139,   139,
   139,   139,   139,   139,   139,   139,   139,   139,    59,    59,
    59,    59,    59,    59,    59,    59,    59,    59,    60,    60,
    60,    60,    60,    60,    60,    60,    60,    60,   137,   137,
   137,   137,   137,   137,   137,   137,   137,   137,    72,    72,
    72,    72,    72,    72,    72,    72,    72,    68,    68,    68,
    68,    68,    68,    68,    68,    68,    50,    50,    50,    50,
    50,    50,    50,    50,    50,   151,   151,   151,   151,   151,
   151,    95,    95,    95,    95,    95,    95,   162,   162,   162,
   162,   162,   162,   146,   146,   146,   146,   146,   146,   161,
   161,   161,   161,   161,   161,    57,    57,    57,    57,    57,
    79,    79,    79,    79,    67,    67,    67,    67,    69,    69,
    69,    54,    54,    54,    76,    76,    93,    93,    82,     1,
    71,   135,    65,   104,    55,     8,   143,   144,     9,    44,
   147,   149,   150,    43,   156,   157,   160,    39,    36,   165,
   167,    13,   170,   173 ]

racc_action_pointer = [
    -5,   379,   nil,   nil,    12,   nil,   nil,   nil,   380,   383,
   nil,   140,   130,   394,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     6,   nil,    27,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   398,    63,   nil,   378,
   nil,    54,    50,   388,   384,   nil,   170,    37,    12,   200,
   307,   220,   nil,   nil,   368,   378,   nil,   347,   nil,   260,
   270,   nil,   nil,   nil,   nil,   362,   nil,   355,   298,   360,
   nil,   360,   289,   210,   nil,   nil,   366,   nil,    47,   352,
   160,    67,   358,    67,   nil,   nil,   nil,   nil,   nil,   120,
   110,   nil,   nil,   368,    -7,   323,     9,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   378,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    80,   nil,   nil,   nil,   100,   nil,    29,    57,
   150,   nil,   nil,   nil,   230,   375,   nil,   280,   nil,   250,
   240,   190,   nil,   378,   367,   180,   335,   384,   nil,   385,
   386,   317,   nil,   nil,   nil,   nil,   386,   375,   nil,   nil,
   388,   341,   329,   nil,   nil,   393,   nil,   392,   nil,    90,
   394,   nil,   nil,   395,   nil ]

racc_action_default = [
    -1,  -108,    -2,    -3,    -4,    -5,    -6,    -7,    -8,    -9,
   -10,  -108,  -108,   -33,   -34,   -35,   -36,   -37,   -42,   -43,
   -44,   -45,  -108,   -54,  -108,   -66,   -67,   -68,   -69,   -70,
   -71,   -72,   -73,   -74,   -75,   -76,  -108,  -108,   -38,   -39,
   -40,  -108,  -108,    -8,    -9,   -11,  -108,  -108,  -108,   -57,
  -108,  -108,   175,   -12,   -13,  -108,   -16,  -108,   -30,  -108,
  -108,   -90,   -41,   -27,   -28,  -108,   -61,  -108,  -108,  -108,
   -29,  -108,  -108,  -108,   -91,   -98,  -108,  -100,  -108,  -108,
  -108,  -108,  -108,   -52,   -51,   -53,   -55,   -56,   -60,   -58,
  -108,   -14,   -18,  -108,  -108,  -108,  -108,   -85,   -86,   -87,
   -88,   -83,   -89,   -84,   -48,   -62,   -63,   -64,   -65,   -77,
   -78,   -79,   -80,   -49,   -92,   -93,   -94,   -95,   -96,   -97,
   -99,  -101,  -108,   -26,   -46,   -47,  -108,   -19,  -108,  -108,
  -108,   -81,   -20,   -21,  -108,  -108,   -31,  -108,  -102,  -108,
  -108,  -108,  -107,  -108,  -108,  -108,  -108,  -108,   -82,  -108,
  -108,  -108,  -106,  -103,  -104,  -105,  -108,  -108,   -59,   -23,
  -108,  -108,  -108,   -15,   -32,  -108,   -50,  -108,   -25,  -108,
  -108,   -24,   -22,  -108,   -17 ]

racc_goto_table = [
    12,    75,   135,    49,    51,    55,     4,    22,    13,   168,
   168,    91,    47,   127,   133,   131,   131,   163,    56,    54,
   132,    53,     9,     8,    58,   164,    45,    14,    15,    89,
    51,    16,    17,    18,    19,    20,    21,     5,    75,   101,
    84,     3,     2,    66,    61,     1,    80,    81,   109,    88,
   nil,    90,   101,   159,    83,    86,    85,   nil,   nil,   nil,
   103,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   122,   123,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    88,
   126,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   109,   nil,   nil,   nil,   109,   nil,   nil,   101,   nil,   nil,
   nil,   nil,   123,   nil,   nil,   nil,   145,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   153,
   154,   155,   nil,   nil,   nil,   158,   nil,   nil,   nil,   101 ]

racc_goto_check = [
    22,    44,    15,    40,    41,    14,     4,    38,    28,    21,
    21,    13,    22,    18,    18,    24,    24,    16,    17,    12,
    19,    11,     9,     8,    26,    27,     6,    29,    30,    40,
    41,    31,    32,    34,    35,    36,    37,     5,    44,    41,
    39,     3,     2,    42,    43,     1,    22,    22,    41,    22,
   nil,    22,    41,    15,     4,    38,    28,   nil,   nil,   nil,
    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    22,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,
    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    41,   nil,   nil,   nil,    41,   nil,   nil,    41,   nil,   nil,
   nil,   nil,    22,   nil,   nil,   nil,    22,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,
    22,    22,   nil,   nil,   nil,    22,   nil,   nil,   nil,    41 ]

racc_goto_pointer = [
   nil,    45,    42,    41,     6,    37,    15,   nil,    23,    22,
   nil,   -16,   -18,   -43,   -32,   -93,  -134,   -19,   -80,   -74,
   nil,  -152,     0,   nil,   -78,   nil,   -13,  -126,     8,    27,
    28,    31,    32,   nil,    33,    34,    35,    36,     7,    -8,
   -21,   -20,     2,     7,   -41,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,     6,     7,    43,    44,
    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   128,   142,    46,    64,    63,    70,   nil,   136,   nil,   nil,
   nil,   nil,   nil,    38,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    26,   nil,    74,   138,    77 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 31, :_reduce_8,
  1, 31, :_reduce_9,
  1, 31, :_reduce_10,
  2, 32, :_reduce_11,
  3, 30, :_reduce_12,
  1, 36, :_reduce_none,
  2, 36, :_reduce_14,
  5, 37, :_reduce_15,
  1, 37, :_reduce_none,
  8, 42, :_reduce_17,
  1, 38, :_reduce_18,
  2, 38, :_reduce_19,
  2, 38, :_reduce_20,
  1, 44, :_reduce_none,
  5, 44, :_reduce_22,
  3, 43, :_reduce_23,
  5, 43, :_reduce_24,
  4, 43, :_reduce_25,
  4, 33, :_reduce_26,
  1, 48, :_reduce_none,
  3, 34, :_reduce_28,
  3, 35, :_reduce_29,
  1, 39, :_reduce_none,
  1, 40, :_reduce_none,
  1, 41, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  2, 53, :_reduce_38,
  1, 58, :_reduce_39,
  1, 58, :_reduce_40,
  2, 58, :_reduce_41,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  4, 59, :_reduce_46,
  4, 59, :_reduce_47,
  4, 60, :_reduce_48,
  4, 61, :_reduce_49,
  7, 62, :_reduce_50,
  3, 55, :_reduce_51,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 63, :_reduce_54,
  1, 64, :_reduce_none,
  1, 64, :_reduce_56,
  2, 56, :_reduce_57,
  3, 56, :_reduce_58,
  5, 65, :_reduce_59,
  2, 65, :_reduce_60,
  3, 57, :_reduce_61,
  2, 67, :_reduce_62,
  2, 67, :_reduce_63,
  2, 67, :_reduce_64,
  2, 67, :_reduce_65,
  1, 47, :_reduce_66,
  1, 47, :_reduce_none,
  1, 66, :_reduce_68,
  1, 66, :_reduce_69,
  1, 66, :_reduce_70,
  1, 66, :_reduce_71,
  1, 66, :_reduce_72,
  1, 66, :_reduce_73,
  1, 66, :_reduce_74,
  1, 66, :_reduce_75,
  1, 66, :_reduce_76,
  2, 49, :_reduce_77,
  2, 49, :_reduce_78,
  2, 49, :_reduce_79,
  2, 49, :_reduce_80,
  1, 45, :_reduce_none,
  2, 45, :_reduce_82,
  2, 68, :_reduce_83,
  2, 68, :_reduce_84,
  2, 68, :_reduce_85,
  2, 68, :_reduce_86,
  2, 68, :_reduce_87,
  2, 68, :_reduce_88,
  2, 51, :_reduce_89,
  1, 51, :_reduce_none,
  1, 69, :_reduce_none,
  2, 69, :_reduce_92,
  2, 69, :_reduce_93,
  2, 69, :_reduce_94,
  2, 69, :_reduce_95,
  2, 69, :_reduce_96,
  2, 69, :_reduce_97,
  1, 70, :_reduce_none,
  2, 70, :_reduce_99,
  1, 50, :_reduce_none,
  2, 50, :_reduce_101,
  1, 46, :_reduce_none,
  2, 46, :_reduce_103,
  2, 46, :_reduce_104,
  2, 46, :_reduce_105,
  2, 52, :_reduce_106,
  1, 52, :_reduce_none ]

racc_reduce_n = 108

racc_shift_n = 175

racc_token_table = {
  false => 0,
  :error => 1,
  :T => 2,
  :Z => 3,
  :PLUS => 4,
  :MINUS => 5,
  :COLON => 6,
  :SLASH => 7,
  :D0 => 8,
  :D1 => 9,
  :D2 => 10,
  :D3 => 11,
  :D4 => 12,
  :D5 => 13,
  :D6 => 14,
  :D7 => 15,
  :D8 => 16,
  :D9 => 17,
  :UNCERTAIN => 18,
  :APPROXIMATE => 19,
  :UNSPECIFIED => 20,
  :UNKNOWN => 21,
  :OPEN => 22,
  :LONGYEAR => 23,
  :UNMATCHED => 24 }

racc_nt_base = 25

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "T",
  "Z",
  "PLUS",
  "MINUS",
  "COLON",
  "SLASH",
  "D0",
  "D1",
  "D2",
  "D3",
  "D4",
  "D5",
  "D6",
  "D7",
  "D8",
  "D9",
  "UNCERTAIN",
  "APPROXIMATE",
  "UNSPECIFIED",
  "UNKNOWN",
  "OPEN",
  "LONGYEAR",
  "UNMATCHED",
  "$start",
  "edtf",
  "level_0_expression",
  "level_1_expression",
  "date",
  "date_time",
  "positive_date",
  "negative_date",
  "year",
  "year_month",
  "year_month_day",
  "time",
  "base_time",
  "zone_offset",
  "hour",
  "minute",
  "second",
  "midnight",
  "zone_offset_hour",
  "positive_zone_offset",
  "d01_13",
  "d01_59",
  "digit",
  "month",
  "d01_12",
  "d01_31",
  "d00_23",
  "d00_59",
  "uncertain_or_approximate_date",
  "unspecified",
  "level_1_interval",
  "long_year_simple",
  "season",
  "uncertain_or_approximate",
  "unspecified_year",
  "unspecified_month",
  "unspecified_day",
  "unspecified_day_and_month",
  "level_1_start",
  "level_1_end",
  "long_year",
  "positive_digit",
  "season_number",
  "d01_23",
  "d01_29",
  "d01_30" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_8(val, _values, result)
     result = Date.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_9(val, _values, result)
     result = Date.new(*val.flatten) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_10(val, _values, result)
     result = Date.new(*val.flatten) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_11(val, _values, result)
     result = Date.new(-1 * val[1].year, val[1].month, val[1].day) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_12(val, _values, result)
     result = DateTime.new(val[0].year, val[0].month, val[0].day, *val[2]) 
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_14(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_15(val, _values, result)
     result = [val[0], val[2], val[4]] 
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_17(val, _values, result)
     result = [24, 0, 0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_18(val, _values, result)
     result = 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_19(val, _values, result)
     result = -1 * val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_20(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_22(val, _values, result)
     result = 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_23(val, _values, result)
     result = Rational(val[0] * 60 + val[2], 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_24(val, _values, result)
     result = Rational(840, 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_25(val, _values, result)
     result = Rational(val[3], 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_26(val, _values, result)
     result = val.zip([1000,100,10,1]).reduce(0) { |s,(a,b)| s += a * b } 
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_28(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_29(val, _values, result)
     result = val[0] << val[2]; raise ArgumentError, "invalid date (invalid days #{result[2]} for month #{result[1]})" if result[2] > 31 || (result[2] > 30 && [2,4,6,9,11].include?(result[1])) || (result[2] > 29 && result[1] == 2) 
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_38(val, _values, result)
     result = val[0]; val[1].each { |m| result.send(m) } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 86)
  def _reduce_39(val, _values, result)
     result = [:uncertain!] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_40(val, _values, result)
     result = [:approximate!] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 88)
  def _reduce_41(val, _values, result)
     result = [:uncertain!, :approximate!] 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_46(val, _values, result)
     result = Date.new(val[0,3].zip([1000,100,10]).reduce(0) { |s,(a,b)| s += a * b }); result.unspecified.year[3] = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_47(val, _values, result)
     result = Date.new(val[0,2].zip([1000,100]).reduce(0) { |s,(a,b)| s += a * b }); result.unspecified.year[2,2] = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 99)
  def _reduce_48(val, _values, result)
     result = Date.new(val[0]).unspecified!(:month) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_49(val, _values, result)
     result = Date.new(*val[0]).unspecified!(:day) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 103)
  def _reduce_50(val, _values, result)
     result = Date.new(val[0]).unspecified!([:day,:month]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 106)
  def _reduce_51(val, _values, result)
     result = Interval.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 52 omitted

# reduce 53 omitted

module_eval(<<'.,.,', 'parser.y', 110)
  def _reduce_54(val, _values, result)
     result = :unknown 
    result
  end
.,.,

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.y', 113)
  def _reduce_56(val, _values, result)
     result = :open 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_57(val, _values, result)
     result = Date.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 117)
  def _reduce_58(val, _values, result)
     result = Date.new(-1 * val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_59(val, _values, result)
     result = val.zip([10000,1000,100,10,1]).reduce(0) { |s,(a,b)| s += a * b } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_60(val, _values, result)
     result = 10 * val[0] + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 123)
  def _reduce_61(val, _values, result)
     result = Date.new(val[0]); result.season = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 125)
  def _reduce_62(val, _values, result)
     result = 21 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 126)
  def _reduce_63(val, _values, result)
     result = 22 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 127)
  def _reduce_64(val, _values, result)
     result = 23 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 128)
  def _reduce_65(val, _values, result)
     result = 24 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 135)
  def _reduce_66(val, _values, result)
     result = 0 
    result
  end
.,.,

# reduce 67 omitted

module_eval(<<'.,.,', 'parser.y', 138)
  def _reduce_68(val, _values, result)
     result = 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 139)
  def _reduce_69(val, _values, result)
     result = 2 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 140)
  def _reduce_70(val, _values, result)
     result = 3 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 141)
  def _reduce_71(val, _values, result)
     result = 4 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 142)
  def _reduce_72(val, _values, result)
     result = 5 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 143)
  def _reduce_73(val, _values, result)
     result = 6 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 144)
  def _reduce_74(val, _values, result)
     result = 7 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 145)
  def _reduce_75(val, _values, result)
     result = 8 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 146)
  def _reduce_76(val, _values, result)
     result = 9 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 148)
  def _reduce_77(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 149)
  def _reduce_78(val, _values, result)
     result = 10 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 150)
  def _reduce_79(val, _values, result)
     result = 11 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 151)
  def _reduce_80(val, _values, result)
     result = 12 
    result
  end
.,.,

# reduce 81 omitted

module_eval(<<'.,.,', 'parser.y', 154)
  def _reduce_82(val, _values, result)
     result = 13 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 156)
  def _reduce_83(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 157)
  def _reduce_84(val, _values, result)
     result = 10 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 158)
  def _reduce_85(val, _values, result)
     result = 20 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 159)
  def _reduce_86(val, _values, result)
     result = 21 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 160)
  def _reduce_87(val, _values, result)
     result = 22 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 161)
  def _reduce_88(val, _values, result)
     result = 23 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 163)
  def _reduce_89(val, _values, result)
     result = 0  
    result
  end
.,.,

# reduce 90 omitted

# reduce 91 omitted

module_eval(<<'.,.,', 'parser.y', 167)
  def _reduce_92(val, _values, result)
     result = 24 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 168)
  def _reduce_93(val, _values, result)
     result = 25 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 169)
  def _reduce_94(val, _values, result)
     result = 26 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 170)
  def _reduce_95(val, _values, result)
     result = 27 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 171)
  def _reduce_96(val, _values, result)
     result = 28 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 172)
  def _reduce_97(val, _values, result)
     result = 29 
    result
  end
.,.,

# reduce 98 omitted

module_eval(<<'.,.,', 'parser.y', 175)
  def _reduce_99(val, _values, result)
     result = 30 
    result
  end
.,.,

# reduce 100 omitted

module_eval(<<'.,.,', 'parser.y', 178)
  def _reduce_101(val, _values, result)
     result = 31 
    result
  end
.,.,

# reduce 102 omitted

module_eval(<<'.,.,', 'parser.y', 181)
  def _reduce_103(val, _values, result)
     result = 30 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 182)
  def _reduce_104(val, _values, result)
     result = 40 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 183)
  def _reduce_105(val, _values, result)
     result = 50 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 185)
  def _reduce_106(val, _values, result)
     result = 0 
    result
  end
.,.,

# reduce 107 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module EDTF
