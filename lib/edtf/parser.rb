#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'strscan'

module EDTF
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 179)

  def parse(input)
    @yydebug = !!ENV['DEBUG']
    scan(input)
    do_parse
  end
  
  def next_token
    @stack.shift
  end

  def on_error(tid, val, vstack)
    warn "failed to parse extended date time %s (%s) %s" % [val.inspect, token_to_str(tid) || '?', vstack.inspect]
  end

  def scan(input)
    @src = StringScanner.new(input)
    @stack = []
    tokenize
  end

  private

  def tokenize
    until @src.eos?
      case
      when @src.scan(/T/)
        @stack << [:T, @src.matched]
      when @src.scan(/Z/)
        @stack << [:Z, @src.matched]
      when @src.scan(/\?/)
        @stack << [:UNCERTAIN, @src.matched]
      when @src.scan(/~/)
        @stack << [:APPROXIMATE, @src.matched]
      when @src.scan(/open/i)
        @stack << [:OPEN, @src.matched]
      when @src.scan(/unkn?own/i) # matches 'unkown' typo too
        @stack << [:UNKNOWN, @src.matched]
      when @src.scan(/u/)
        @stack << [:UNSPECIFIED, @src.matched]
      when @src.scan(/\+/)
        @stack << [:PLUS, @src.matched]
      when @src.scan(/-/)
        @stack << [:MINUS, @src.matched]
      when @src.scan(/:/)
        @stack << [:COLON, @src.matched]
      when @src.scan(/\//)
        @stack << [:SLASH, @src.matched]
      when @src.scan(/\d/)
        @stack << [['D', @src.matched].join.intern, @src.matched]
      else @src.scan(/./)
        @stack << [:UNMATCHED, @src.rest]
      end
    end
  
    @stack
  end


# -*- racc -*-
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    34,   113,   112,    11,   138,   -49,    22,    24,    25,    26,
    27,    28,    29,    30,    31,    32,    36,    37,    11,    21,
    78,    22,    24,    25,    26,    27,    28,    29,    30,    31,
    32,    80,    82,    81,    21,    22,    24,    25,    26,    27,
    28,    29,    30,    31,    32,    36,    37,   108,    22,    24,
    25,    26,    27,    28,    29,    30,    31,    32,    59,    60,
    73,    63,    54,    64,    67,    94,    95,    96,   130,   129,
    58,   117,   112,    62,   132,    24,    25,    26,    27,    28,
    29,    30,    31,    32,   131,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    22,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    85,    86,    87,    88,    98,    99,
   100,   101,   102,   103,    22,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    22,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    22,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    22,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    22,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    22,    24,    25,    26,    27,    28,
    29,    30,    31,    32,   153,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    22,    24,    25,    26,    27,    28,
    29,    30,    31,    32,   134,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    90,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    22,    24,    25,    26,    27,    28,
    29,    30,    31,    32,    24,    25,    26,    27,    28,    29,
    30,    31,    32,    24,    25,    26,    27,    28,    29,    30,
    31,    32,   150,    54,    64,   122,   123,   124,   120,    54,
    64,   122,   123,   124,   120,    54,    64,   122,   123,   124,
    63,    54,    64,   122,   123,   124,   120,    54,    64,   122,
   123,   124,    85,    86,    87,    88,    84,    63,    54,    64,
    67,    53,    54,    51,    94,    95,    96,   104,   105,    59,
    60,   126,   128,   109,    97,    92,   133,    83,    70,    69,
    46,   127,   139,    45,   141,   142,   143,   -50,   146,   147,
   148,    39,    38,   151,   152,    33,   154,   155 ]

racc_action_check = [
     4,    81,    81,    45,   126,     4,    45,    45,    45,    45,
    45,    45,    45,    45,    45,    45,     4,     4,     0,    45,
    45,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    48,    48,    48,     0,    72,    72,    72,    72,    72,
    72,    72,    72,    72,    72,    74,    74,    72,    44,    44,
    44,    44,    44,    44,    44,    44,    44,    44,    38,    38,
    44,    39,    39,    39,    39,   112,   112,   112,   112,   112,
    38,    82,    82,    39,   117,   117,   117,   117,   117,   117,
   117,   117,   117,   117,   113,   113,   113,   113,   113,   113,
   113,   113,   113,   113,   124,   124,   124,   124,   124,   124,
   124,   124,   124,   124,    64,    64,    64,    64,    64,    64,
    64,    64,    64,    64,    12,    12,    12,    12,    12,    12,
    12,    12,    12,    12,    11,    11,    11,    11,    11,    11,
    11,    11,    11,    11,   123,   123,   123,   123,   123,   123,
   123,   123,   123,   123,   122,   122,   122,   122,   122,   122,
   122,   122,   122,   122,    43,    43,    43,    43,    43,    43,
    43,    43,    43,    43,    71,    71,    71,    71,    71,    71,
    71,    71,    71,    71,   150,   150,   150,   150,   150,   150,
   150,   150,   150,   150,    54,    54,    54,    54,    54,    54,
    54,    54,    54,    54,   120,   120,   120,   120,   120,   120,
   120,   120,   120,   120,    53,    53,    53,    53,    53,    53,
    53,    53,    53,    53,   106,   106,   106,   106,   106,   106,
   106,   106,   106,   106,    63,    63,    63,    63,    63,    63,
    63,    63,    63,    59,    59,    59,    59,    59,    59,    59,
    59,    59,   143,   143,   143,   143,   143,   143,    83,    83,
    83,    83,    83,    83,   133,   133,   133,   133,   133,   133,
   142,   142,   142,   142,   142,   142,   128,   128,   128,   128,
   128,   128,    51,    51,    51,    51,    51,    70,    70,    70,
    70,    34,    34,    34,    60,    60,    60,    67,    67,    69,
    69,    84,   111,    73,    62,    58,   118,    49,    41,    40,
    33,    92,   127,    20,   129,   131,   132,    13,   138,   139,
   141,     9,     8,   146,   148,     1,   151,   154 ]

racc_action_pointer = [
    13,   315,   nil,   nil,    -2,   nil,   nil,   nil,   307,   306,
   nil,   116,   106,   300,   nil,   nil,   nil,   nil,   nil,   nil,
   296,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   300,   273,   nil,   nil,   nil,    50,    53,
   294,   293,   nil,   146,    40,    -2,   nil,   nil,    28,   291,
   nil,   264,   nil,   196,   176,   nil,   nil,   nil,   275,   224,
   276,   nil,   274,   215,    96,   nil,   nil,   279,   nil,   281,
   269,   156,    27,   273,    27,   nil,   nil,   nil,   nil,   nil,
   nil,    -7,    63,   240,   285,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   296,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   206,   nil,   nil,   nil,
   nil,   286,    57,    76,   nil,   nil,   nil,    66,   290,   nil,
   186,   nil,   136,   126,    86,   nil,    -4,   282,   258,   298,
   nil,   299,   300,   246,   nil,   nil,   nil,   nil,   300,   289,
   nil,   302,   252,   234,   nil,   nil,   307,   nil,   306,   nil,
   166,   308,   nil,   nil,   309,   nil ]

racc_action_default = [
    -1,   -96,    -2,    -3,    -4,    -5,    -6,    -7,    -8,    -9,
   -10,   -96,   -96,   -33,   -34,   -35,   -39,   -40,   -41,   -42,
   -96,   -51,   -54,   -55,   -56,   -57,   -58,   -59,   -60,   -61,
   -62,   -63,   -64,   -96,   -96,   -36,   -37,   -38,   -96,   -96,
    -8,    -9,   -11,   -96,   -96,   -96,   156,   -12,   -13,   -96,
   -16,   -96,   -30,   -96,   -96,   -78,   -27,   -28,   -96,   -96,
   -96,   -29,   -96,   -96,   -96,   -79,   -86,   -96,   -88,   -96,
   -96,   -96,   -96,   -96,   -49,   -48,   -50,   -52,   -53,   -14,
   -18,   -96,   -96,   -96,   -96,   -73,   -74,   -75,   -76,   -71,
   -77,   -72,   -45,   -65,   -66,   -67,   -68,   -46,   -80,   -81,
   -82,   -83,   -84,   -85,   -87,   -89,   -96,   -26,   -43,   -44,
   -19,   -96,   -96,   -96,   -69,   -20,   -21,   -96,   -96,   -31,
   -96,   -90,   -96,   -96,   -96,   -95,   -96,   -96,   -96,   -96,
   -70,   -96,   -96,   -96,   -94,   -91,   -92,   -93,   -96,   -96,
   -23,   -96,   -96,   -96,   -15,   -32,   -96,   -47,   -96,   -25,
   -96,   -96,   -24,   -22,   -96,   -17 ]

racc_goto_table = [
    12,    89,     4,    20,   118,    13,    66,    93,   114,   114,
    79,    89,    44,   110,   116,   149,   149,    49,    48,   144,
    50,    47,   115,     9,     8,    42,    52,   145,     5,    14,
    15,    16,    17,    18,    19,     3,    75,    66,     2,    55,
     1,   nil,   nil,    71,    72,   nil,   nil,    74,    77,   140,
    76,   nil,   nil,   nil,    91,   nil,   nil,   nil,   nil,   nil,
   nil,    93,   nil,   nil,   nil,    93,   nil,   nil,    89,   nil,
   nil,   106,   107,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    89,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   107,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   135,   136,   137 ]

racc_goto_check = [
    22,    38,     4,    36,    15,    28,    40,    38,    24,    24,
    13,    38,    22,    18,    18,    21,    21,    14,    12,    16,
    17,    11,    19,     9,     8,     6,    26,    27,     5,    29,
    30,    32,    33,    34,    35,     3,    37,    40,     2,    39,
     1,   nil,   nil,    22,    22,   nil,   nil,     4,    36,    15,
    28,   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,
   nil,    38,   nil,   nil,   nil,    38,   nil,   nil,    38,   nil,
   nil,    22,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    22,    22,    22 ]

racc_goto_pointer = [
   nil,    40,    38,    35,     2,    28,    14,   nil,    24,    23,
   nil,   -13,   -16,   -38,   -17,   -79,  -114,   -14,   -68,   -60,
   nil,  -127,     0,   nil,   -73,   nil,    -8,  -106,     5,    29,
    30,   nil,    31,    32,    33,    34,     3,    -9,   -52,     5,
   -33,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,     6,     7,    40,    41,
    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   111,   125,    43,    57,    56,    61,   nil,   119,   nil,   nil,
   nil,    35,   nil,   nil,   nil,   nil,   nil,   nil,    23,    65,
   121,    68 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 30, :_reduce_8,
  1, 30, :_reduce_9,
  1, 30, :_reduce_10,
  2, 31, :_reduce_11,
  3, 29, :_reduce_12,
  1, 35, :_reduce_none,
  2, 35, :_reduce_14,
  5, 36, :_reduce_15,
  1, 36, :_reduce_none,
  8, 41, :_reduce_17,
  1, 37, :_reduce_18,
  2, 37, :_reduce_19,
  2, 37, :_reduce_20,
  1, 43, :_reduce_none,
  5, 43, :_reduce_22,
  3, 42, :_reduce_23,
  5, 42, :_reduce_24,
  4, 42, :_reduce_25,
  4, 32, :_reduce_26,
  1, 47, :_reduce_none,
  3, 33, :_reduce_28,
  3, 34, :_reduce_29,
  1, 38, :_reduce_none,
  1, 39, :_reduce_none,
  1, 40, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  2, 52, :_reduce_36,
  1, 55, :_reduce_37,
  1, 55, :_reduce_38,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  4, 56, :_reduce_43,
  4, 56, :_reduce_44,
  4, 57, :_reduce_45,
  4, 58, :_reduce_46,
  7, 59, :_reduce_47,
  3, 54, :_reduce_48,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_51,
  1, 61, :_reduce_none,
  1, 61, :_reduce_53,
  1, 46, :_reduce_54,
  1, 46, :_reduce_none,
  1, 62, :_reduce_56,
  1, 62, :_reduce_57,
  1, 62, :_reduce_58,
  1, 62, :_reduce_59,
  1, 62, :_reduce_60,
  1, 62, :_reduce_61,
  1, 62, :_reduce_62,
  1, 62, :_reduce_63,
  1, 62, :_reduce_64,
  2, 48, :_reduce_65,
  2, 48, :_reduce_66,
  2, 48, :_reduce_67,
  2, 48, :_reduce_68,
  1, 44, :_reduce_none,
  2, 44, :_reduce_70,
  2, 63, :_reduce_71,
  2, 63, :_reduce_72,
  2, 63, :_reduce_73,
  2, 63, :_reduce_74,
  2, 63, :_reduce_75,
  2, 63, :_reduce_76,
  2, 50, :_reduce_77,
  1, 50, :_reduce_none,
  1, 64, :_reduce_none,
  2, 64, :_reduce_80,
  2, 64, :_reduce_81,
  2, 64, :_reduce_82,
  2, 64, :_reduce_83,
  2, 64, :_reduce_84,
  2, 64, :_reduce_85,
  1, 65, :_reduce_none,
  2, 65, :_reduce_87,
  1, 49, :_reduce_none,
  2, 49, :_reduce_89,
  1, 45, :_reduce_none,
  2, 45, :_reduce_91,
  2, 45, :_reduce_92,
  2, 45, :_reduce_93,
  2, 51, :_reduce_94,
  1, 51, :_reduce_none ]

racc_reduce_n = 96

racc_shift_n = 156

racc_token_table = {
  false => 0,
  :error => 1,
  :T => 2,
  :Z => 3,
  :PLUS => 4,
  :MINUS => 5,
  :COLON => 6,
  :SLASH => 7,
  :D0 => 8,
  :D1 => 9,
  :D2 => 10,
  :D3 => 11,
  :D4 => 12,
  :D5 => 13,
  :D6 => 14,
  :D7 => 15,
  :D8 => 16,
  :D9 => 17,
  :UNCERTAIN => 18,
  :APPROXIMATE => 19,
  :UNSPECIFIED => 20,
  :UNKNOWN => 21,
  :OPEN => 22,
  :UNMATCHED => 23 }

racc_nt_base = 24

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "T",
  "Z",
  "PLUS",
  "MINUS",
  "COLON",
  "SLASH",
  "D0",
  "D1",
  "D2",
  "D3",
  "D4",
  "D5",
  "D6",
  "D7",
  "D8",
  "D9",
  "UNCERTAIN",
  "APPROXIMATE",
  "UNSPECIFIED",
  "UNKNOWN",
  "OPEN",
  "UNMATCHED",
  "$start",
  "edtf",
  "level_0_expression",
  "level_1_expression",
  "date",
  "date_time",
  "positive_date",
  "negative_date",
  "year",
  "year_month",
  "year_month_day",
  "time",
  "base_time",
  "zone_offset",
  "hour",
  "minute",
  "second",
  "midnight",
  "zone_offset_hour",
  "positive_zone_offset",
  "d01_13",
  "d01_59",
  "digit",
  "month",
  "d01_12",
  "d01_31",
  "d00_23",
  "d00_59",
  "uncertain_or_approximate_date",
  "unspecified",
  "level_1_interval",
  "uncertain_or_approximate",
  "unspecified_year",
  "unspecified_month",
  "unspecified_day",
  "unspecified_day_and_month",
  "level_1_start",
  "level_1_end",
  "positive_digit",
  "d01_23",
  "d01_29",
  "d01_30" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_8(val, _values, result)
     result = Date.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_9(val, _values, result)
     result = Date.new(*val.flatten) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_10(val, _values, result)
     result = Date.new(*val.flatten) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_11(val, _values, result)
     result = Date.new(-1 * val[1].year, val[1].month, val[1].day) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_12(val, _values, result)
     result = DateTime.new(val[0].year, val[0].month, val[0].day, *val[2]) 
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_14(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_15(val, _values, result)
     result = [val[0], val[2], val[4]] 
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_17(val, _values, result)
     result = [24, 0, 0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_18(val, _values, result)
     result = 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_19(val, _values, result)
     result = -1 * val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_20(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_22(val, _values, result)
     result = 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_23(val, _values, result)
     result = Rational(val[0] * 60 + val[2], 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_24(val, _values, result)
     result = Rational(840, 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_25(val, _values, result)
     result = Rational(val[3], 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_26(val, _values, result)
     result = val.zip([1000,100,10,1]).reduce(0) { |s,(a,b)| s += a * b } 
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_28(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_29(val, _values, result)
     result = val[0] << val[2]; raise ArgumentError, "invalid date (invalid days #{result[2]} for month #{result[1]})" if result[2] > 31 || (result[2] > 30 && [2,4,6,9,11].include?(result[1])) || (result[2] > 29 && result[1] == 2) 
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_36(val, _values, result)
     result = val[0].send(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 86)
  def _reduce_37(val, _values, result)
     result = :uncertain! 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_38(val, _values, result)
     result = :approximate! 
    result
  end
.,.,

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_43(val, _values, result)
     result = Date.new(val[0,3].zip([1000,100,10]).reduce(0) { |s,(a,b)| s += a * b }); result.unspecified.year[3] = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_44(val, _values, result)
     result = Date.new(val[0,2].zip([1000,100]).reduce(0) { |s,(a,b)| s += a * b }); result.unspecified.year[2,2] = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_45(val, _values, result)
     result = Date.new(val[0]).unspecified!(:month) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_46(val, _values, result)
     result = Date.new(*val[0]).unspecified!(:day) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 102)
  def _reduce_47(val, _values, result)
     result = Date.new(val[0]).unspecified!([:day,:month]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 105)
  def _reduce_48(val, _values, result)
     result = Interval.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 49 omitted

# reduce 50 omitted

module_eval(<<'.,.,', 'parser.y', 109)
  def _reduce_51(val, _values, result)
     result = :unknown 
    result
  end
.,.,

# reduce 52 omitted

module_eval(<<'.,.,', 'parser.y', 112)
  def _reduce_53(val, _values, result)
     result = :open 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_54(val, _values, result)
     result = 0 
    result
  end
.,.,

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.y', 123)
  def _reduce_56(val, _values, result)
     result = 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_57(val, _values, result)
     result = 2 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 125)
  def _reduce_58(val, _values, result)
     result = 3 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 126)
  def _reduce_59(val, _values, result)
     result = 4 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 127)
  def _reduce_60(val, _values, result)
     result = 5 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 128)
  def _reduce_61(val, _values, result)
     result = 6 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 129)
  def _reduce_62(val, _values, result)
     result = 7 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 130)
  def _reduce_63(val, _values, result)
     result = 8 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_64(val, _values, result)
     result = 9 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 133)
  def _reduce_65(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_66(val, _values, result)
     result = 10 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 135)
  def _reduce_67(val, _values, result)
     result = 11 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 136)
  def _reduce_68(val, _values, result)
     result = 12 
    result
  end
.,.,

# reduce 69 omitted

module_eval(<<'.,.,', 'parser.y', 139)
  def _reduce_70(val, _values, result)
     result = 13 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 141)
  def _reduce_71(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 142)
  def _reduce_72(val, _values, result)
     result = 10 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 143)
  def _reduce_73(val, _values, result)
     result = 20 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 144)
  def _reduce_74(val, _values, result)
     result = 21 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 145)
  def _reduce_75(val, _values, result)
     result = 22 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 146)
  def _reduce_76(val, _values, result)
     result = 23 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 148)
  def _reduce_77(val, _values, result)
     result = 0  
    result
  end
.,.,

# reduce 78 omitted

# reduce 79 omitted

module_eval(<<'.,.,', 'parser.y', 152)
  def _reduce_80(val, _values, result)
     result = 24 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 153)
  def _reduce_81(val, _values, result)
     result = 25 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 154)
  def _reduce_82(val, _values, result)
     result = 26 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 155)
  def _reduce_83(val, _values, result)
     result = 27 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 156)
  def _reduce_84(val, _values, result)
     result = 28 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 157)
  def _reduce_85(val, _values, result)
     result = 29 
    result
  end
.,.,

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.y', 160)
  def _reduce_87(val, _values, result)
     result = 30 
    result
  end
.,.,

# reduce 88 omitted

module_eval(<<'.,.,', 'parser.y', 163)
  def _reduce_89(val, _values, result)
     result = 31 
    result
  end
.,.,

# reduce 90 omitted

module_eval(<<'.,.,', 'parser.y', 166)
  def _reduce_91(val, _values, result)
     result = 30 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 167)
  def _reduce_92(val, _values, result)
     result = 40 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 168)
  def _reduce_93(val, _values, result)
     result = 50 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 170)
  def _reduce_94(val, _values, result)
     result = 0 
    result
  end
.,.,

# reduce 95 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module EDTF
