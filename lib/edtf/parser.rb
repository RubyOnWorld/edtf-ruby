#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'strscan'

module EDTF
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 177)

  def parse(input)
    @yydebug = !!ENV['DEBUG']
    scan(input)
    do_parse
  end
  
  def next_token
    @stack.shift
  end

  def on_error(tid, val, vstack)
    warn "failed to parse extended date time %s (%s) %s" % [val.inspect, token_to_str(tid) || '?', vstack.inspect]
  end

  def scan(input)
    @src = StringScanner.new(input)
    @stack = []
    tokenize
  end

  private

  def tokenize
    until @src.eos?
      case
      when @src.scan(/T/)
        @stack << [:T, @src.matched]
      when @src.scan(/Z/)
        @stack << [:Z, @src.matched]
      when @src.scan(/\?/)
        @stack << [:UNCERTAIN, @src.matched]
      when @src.scan(/~/)
        @stack << [:APPROXIMATE, @src.matched]
      when @src.scan(/open/i)
        @stack << [:OPEN, @src.matched]
      when @src.scan(/unknown/i)
        @stack << [:UNKNOWN, @src.matched]
      when @src.scan(/u/)
        @stack << [:UNSPECIFIED, @src.matched]
      when @src.scan(/\+/)
        @stack << [:PLUS, @src.matched]
      when @src.scan(/-/)
        @stack << [:MINUS, @src.matched]
      when @src.scan(/:/)
        @stack << [:COLON, @src.matched]
      when @src.scan(/\//)
        @stack << [:SLASH, @src.matched]
      when @src.scan(/\d/)
        @stack << [['D', @src.matched].join.intern, @src.matched]
      else @src.scan(/./)
        @stack << [:UNMATCHED, @src.rest]
      end
    end
  
    @stack
  end


# -*- racc -*-
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    12,   116,   115,    23,    25,    26,    27,    28,    29,    30,
    31,    32,    33,    35,    62,    63,    22,    81,    36,   153,
    56,    67,   125,   126,   127,    47,    61,   129,    12,    38,
    39,    23,    25,    26,    27,    28,    29,    30,    31,    32,
    33,    55,    56,    53,    22,    23,    25,    26,    27,    28,
    29,    30,    31,    32,    33,    12,   131,   111,    23,    25,
    26,    27,    28,    29,    30,    31,    32,    33,    66,    56,
    67,    70,   123,    56,    67,   125,   126,   127,    38,    39,
    65,    23,    25,    26,    27,    28,    29,    30,    31,    32,
    33,    62,    63,    76,    23,    25,    26,    27,    28,    29,
    30,    31,    32,    33,   156,    25,    26,    27,    28,    29,
    30,    31,    32,    33,   134,    25,    26,    27,    28,    29,
    30,    31,    32,    33,   135,    25,    26,    27,    28,    29,
    30,    31,    32,    33,    23,    25,    26,    27,    28,    29,
    30,    31,    32,    33,    23,    25,    26,    27,    28,    29,
    30,    31,    32,    33,    23,    25,    26,    27,    28,    29,
    30,    31,    32,    33,    88,    89,    90,    91,   101,   102,
   103,   104,   105,   106,    23,    25,    26,    27,    28,    29,
    30,    31,    32,    33,   137,    25,    26,    27,    28,    29,
    30,    31,    32,    33,    23,    25,    26,    27,    28,    29,
    30,    31,    32,    33,    93,    25,    26,    27,    28,    29,
    30,    31,    32,    33,    23,    25,    26,    27,    28,    29,
    30,    31,    32,    33,    23,    25,    26,    27,    28,    29,
    30,    31,    32,    33,    23,    25,    26,    27,    28,    29,
    30,    31,    32,    33,    25,    26,    27,    28,    29,    30,
    31,    32,    33,    25,    26,    27,    28,    29,    30,    31,
    32,    33,   123,    56,    67,   125,   126,   127,    66,    56,
    67,   125,   126,   127,   123,    56,    67,   125,   126,   127,
    97,    98,    99,   133,   132,    88,    89,    90,    91,    87,
    66,    56,    67,    70,    83,    85,    84,    97,    98,    99,
   107,   108,   120,   115,   130,   112,    34,   136,   100,    95,
    86,    40,   141,   142,    41,   144,   145,   146,    73,   149,
   150,   151,    72,   -51,   154,   155,    48,   157,   158 ]

racc_action_check = [
    47,    84,    84,    47,    47,    47,    47,    47,    47,    47,
    47,    47,    47,     4,    40,    40,    47,    47,     4,   146,
   146,   146,   146,   146,   146,    21,    40,    87,     0,     4,
     4,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,    35,    35,    35,     0,    75,    75,    75,    75,    75,
    75,    75,    75,    75,    75,    36,   114,    75,    36,    36,
    36,    36,    36,    36,    36,    36,    36,    36,    41,    41,
    41,    41,    86,    86,    86,    86,    86,    86,    77,    77,
    41,    46,    46,    46,    46,    46,    46,    46,    46,    46,
    46,    72,    72,    46,   109,   109,   109,   109,   109,   109,
   109,   109,   109,   109,   153,   153,   153,   153,   153,   153,
   153,   153,   153,   153,   116,   116,   116,   116,   116,   116,
   116,   116,   116,   116,   120,   120,   120,   120,   120,   120,
   120,   120,   120,   120,    13,    13,    13,    13,    13,    13,
    13,    13,    13,    13,    12,    12,    12,    12,    12,    12,
    12,    12,    12,    12,    74,    74,    74,    74,    74,    74,
    74,    74,    74,    74,    67,    67,    67,    67,    67,    67,
    67,    67,    67,    67,    45,    45,    45,    45,    45,    45,
    45,    45,    45,    45,   123,   123,   123,   123,   123,   123,
   123,   123,   123,   123,   127,   127,   127,   127,   127,   127,
   127,   127,   127,   127,    55,    55,    55,    55,    55,    55,
    55,    55,    55,    55,   126,   126,   126,   126,   126,   126,
   126,   126,   126,   126,    56,    56,    56,    56,    56,    56,
    56,    56,    56,    56,   125,   125,   125,   125,   125,   125,
   125,   125,   125,   125,    66,    66,    66,    66,    66,    66,
    66,    66,    66,    62,    62,    62,    62,    62,    62,    62,
    62,    62,   136,   136,   136,   136,   136,   136,   145,   145,
   145,   145,   145,   145,   131,   131,   131,   131,   131,   131,
   115,   115,   115,   115,   115,    53,    53,    53,    53,    53,
    73,    73,    73,    73,    50,    50,    50,    63,    63,    63,
    70,    70,    85,    85,    95,    76,     1,   121,    65,    61,
    51,     9,   129,   130,    10,   132,   134,   135,    43,   141,
   142,   144,    42,    14,   149,   151,    34,   154,   157 ]

racc_action_pointer = [
    23,   306,   nil,   nil,    11,   nil,   nil,   nil,   nil,   306,
   309,   nil,   136,   126,   316,   nil,   nil,   nil,   nil,   nil,
   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   326,    33,    50,   nil,   nil,   nil,
     6,    60,   317,   313,   nil,   166,    73,    -5,   nil,   nil,
   291,   304,   nil,   277,   nil,   196,   216,   nil,   nil,   nil,
   nil,   289,   244,   289,   nil,   288,   235,   156,   nil,   nil,
   292,   nil,    83,   282,   146,    37,   285,    60,   nil,   nil,
   nil,   nil,   nil,   nil,    -7,   294,    64,    21,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   299,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    86,
   nil,   nil,   nil,   nil,    50,   272,   106,   nil,   nil,   nil,
   116,   301,   nil,   176,   nil,   226,   206,   186,   nil,   304,
   293,   266,   309,   nil,   310,   311,   254,   nil,   nil,   nil,
   nil,   311,   300,   nil,   313,   260,    11,   nil,   nil,   318,
   nil,   317,   nil,    96,   319,   nil,   nil,   320,   nil ]

racc_action_default = [
    -1,   -97,    -2,    -3,    -4,    -5,    -6,    -7,    -8,    -9,
   -10,   -11,   -97,   -97,   -35,   -36,   -37,   -41,   -42,   -43,
   -44,   -97,   -52,   -55,   -56,   -57,   -58,   -59,   -60,   -61,
   -62,   -63,   -64,   -65,   -97,   -97,   -97,   -38,   -39,   -40,
   -97,   -97,    -9,   -10,   -12,   -97,   -97,   -97,   159,   -13,
   -14,   -97,   -17,   -97,   -31,   -97,   -97,   -79,   -34,   -28,
   -29,   -97,   -97,   -97,   -30,   -97,   -97,   -97,   -80,   -87,
   -97,   -89,   -97,   -97,   -97,   -97,   -97,   -97,   -50,   -51,
   -53,   -54,   -15,   -19,   -97,   -97,   -97,   -97,   -74,   -75,
   -76,   -77,   -72,   -78,   -73,   -47,   -66,   -67,   -68,   -69,
   -48,   -81,   -82,   -83,   -84,   -85,   -86,   -88,   -90,   -97,
   -27,   -45,   -46,   -20,   -97,   -97,   -97,   -70,   -21,   -22,
   -97,   -97,   -32,   -97,   -91,   -97,   -97,   -97,   -96,   -97,
   -97,   -97,   -97,   -71,   -97,   -97,   -97,   -95,   -92,   -93,
   -94,   -97,   -97,   -24,   -97,   -97,   -97,   -16,   -33,   -97,
   -49,   -97,   -26,   -97,   -97,   -25,   -23,   -97,   -18 ]

racc_goto_table = [
    13,    92,    21,    14,     4,    69,   118,   121,    96,   152,
   152,    82,    92,    46,   113,   119,   117,   117,    51,    49,
   147,    52,    10,    50,     9,    44,     6,    54,   148,     5,
    15,    16,    17,    18,    19,    20,     3,    69,    78,     2,
    58,    57,     1,   nil,   nil,    74,    75,   nil,   nil,    80,
    79,    77,   143,   nil,   nil,   nil,    94,   nil,   nil,   nil,
   nil,   nil,    96,   nil,   nil,   nil,    96,   nil,   nil,    92,
   nil,   nil,   nil,   nil,   109,   110,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    92,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   110,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   138,   139,   140 ]

racc_goto_check = [
    23,    39,    37,    29,     4,    41,    20,    16,    39,    22,
    22,    14,    39,    23,    19,    19,    25,    25,    15,    12,
    17,    18,    10,    13,     9,     7,     6,    27,    28,     5,
    30,    31,    33,    34,    35,    36,     3,    41,    38,     2,
     4,    40,     1,   nil,   nil,    23,    23,   nil,   nil,    37,
    29,     4,    16,   nil,   nil,   nil,    23,   nil,   nil,   nil,
   nil,   nil,    39,   nil,   nil,   nil,    39,   nil,   nil,    39,
   nil,   nil,   nil,   nil,    23,    23,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    39,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    23,    23,    23 ]

racc_goto_pointer = [
   nil,    42,    39,    36,     4,    29,    26,    13,   nil,    24,
    22,   nil,   -16,   -12,   -39,   -17,   -79,  -116,   -14,   -70,
   -79,   nil,  -136,     0,   nil,   -68,   nil,    -8,  -108,     3,
    30,    31,   nil,    32,    33,    34,    35,     2,    -9,   -54,
     6,   -36,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,     8,    42,
    43,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   114,   128,    45,    60,    59,    64,   nil,   122,   nil,
   nil,   nil,    37,   nil,   nil,   nil,   nil,   nil,   nil,    24,
    68,   124,    71 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 31, :_reduce_9,
  1, 31, :_reduce_10,
  1, 31, :_reduce_11,
  2, 32, :_reduce_12,
  3, 29, :_reduce_13,
  1, 36, :_reduce_none,
  2, 36, :_reduce_15,
  5, 37, :_reduce_16,
  1, 37, :_reduce_none,
  8, 42, :_reduce_18,
  1, 38, :_reduce_19,
  2, 38, :_reduce_20,
  2, 38, :_reduce_21,
  1, 44, :_reduce_none,
  5, 44, :_reduce_23,
  3, 43, :_reduce_24,
  5, 43, :_reduce_25,
  4, 43, :_reduce_26,
  4, 33, :_reduce_27,
  1, 48, :_reduce_none,
  3, 34, :_reduce_29,
  3, 35, :_reduce_30,
  1, 39, :_reduce_none,
  1, 40, :_reduce_none,
  1, 41, :_reduce_none,
  3, 30, :_reduce_34,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  2, 53, :_reduce_38,
  1, 56, :_reduce_39,
  1, 56, :_reduce_40,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  4, 57, :_reduce_45,
  4, 57, :_reduce_46,
  4, 58, :_reduce_47,
  4, 59, :_reduce_48,
  7, 60, :_reduce_49,
  3, 55, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 47, :_reduce_55,
  1, 47, :_reduce_none,
  1, 63, :_reduce_57,
  1, 63, :_reduce_58,
  1, 63, :_reduce_59,
  1, 63, :_reduce_60,
  1, 63, :_reduce_61,
  1, 63, :_reduce_62,
  1, 63, :_reduce_63,
  1, 63, :_reduce_64,
  1, 63, :_reduce_65,
  2, 49, :_reduce_66,
  2, 49, :_reduce_67,
  2, 49, :_reduce_68,
  2, 49, :_reduce_69,
  1, 45, :_reduce_none,
  2, 45, :_reduce_71,
  2, 64, :_reduce_72,
  2, 64, :_reduce_73,
  2, 64, :_reduce_74,
  2, 64, :_reduce_75,
  2, 64, :_reduce_76,
  2, 64, :_reduce_77,
  2, 51, :_reduce_78,
  1, 51, :_reduce_none,
  1, 65, :_reduce_none,
  2, 65, :_reduce_81,
  2, 65, :_reduce_82,
  2, 65, :_reduce_83,
  2, 65, :_reduce_84,
  2, 65, :_reduce_85,
  2, 65, :_reduce_86,
  1, 66, :_reduce_none,
  2, 66, :_reduce_88,
  1, 50, :_reduce_none,
  2, 50, :_reduce_90,
  1, 46, :_reduce_none,
  2, 46, :_reduce_92,
  2, 46, :_reduce_93,
  2, 46, :_reduce_94,
  2, 52, :_reduce_95,
  1, 52, :_reduce_none ]

racc_reduce_n = 97

racc_shift_n = 159

racc_token_table = {
  false => 0,
  :error => 1,
  :T => 2,
  :Z => 3,
  :PLUS => 4,
  :MINUS => 5,
  :COLON => 6,
  :SLASH => 7,
  :D0 => 8,
  :D1 => 9,
  :D2 => 10,
  :D3 => 11,
  :D4 => 12,
  :D5 => 13,
  :D6 => 14,
  :D7 => 15,
  :D8 => 16,
  :D9 => 17,
  :UNCERTAIN => 18,
  :APPROXIMATE => 19,
  :UNSPECIFIED => 20,
  :UNKOWN => 21,
  :OPEN => 22,
  :UNMATCHED => 23 }

racc_nt_base = 24

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "T",
  "Z",
  "PLUS",
  "MINUS",
  "COLON",
  "SLASH",
  "D0",
  "D1",
  "D2",
  "D3",
  "D4",
  "D5",
  "D6",
  "D7",
  "D8",
  "D9",
  "UNCERTAIN",
  "APPROXIMATE",
  "UNSPECIFIED",
  "UNKOWN",
  "OPEN",
  "UNMATCHED",
  "$start",
  "edtf",
  "level_0_expression",
  "level_1_expression",
  "date",
  "date_time",
  "level_0_interval",
  "positive_date",
  "negative_date",
  "year",
  "year_month",
  "year_month_day",
  "time",
  "base_time",
  "zone_offset",
  "hour",
  "minute",
  "second",
  "midnight",
  "zone_offset_hour",
  "positive_zone_offset",
  "d01_13",
  "d01_59",
  "digit",
  "month",
  "d01_12",
  "d01_31",
  "d00_23",
  "d00_59",
  "uncertain_or_approximate_date",
  "unspecified",
  "level_1_interval",
  "uncertain_or_approximate",
  "unspecified_year",
  "unspecified_month",
  "unspecified_day",
  "unspecified_day_and_month",
  "level_1_start",
  "level_1_end",
  "positive_digit",
  "d01_23",
  "d01_29",
  "d01_30" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_9(val, _values, result)
     result = Date.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_10(val, _values, result)
     result = Date.new(*val.flatten) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_11(val, _values, result)
     result = Date.new(*val.flatten) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_12(val, _values, result)
     result = Date.new(-1 * val[1].year, val[1].month, val[1].day) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_13(val, _values, result)
     result = DateTime.new(val[0].year, val[0].month, val[0].day, *val[2]) 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_15(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_16(val, _values, result)
     result = [val[0], val[2], val[4]] 
    result
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_18(val, _values, result)
     result = [24, 0, 0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_19(val, _values, result)
     result = 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_20(val, _values, result)
     result = -1 * val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_21(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_23(val, _values, result)
     result = 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_24(val, _values, result)
     result = Rational(val[0] * 60 + val[2], 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_25(val, _values, result)
     result = Rational(840, 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_26(val, _values, result)
     result = Rational(val[3], 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_27(val, _values, result)
     result = val.zip([1000,100,10,1]).reduce(0) { |s,(a,b)| s += a * b } 
    result
  end
.,.,

# reduce 28 omitted

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_29(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_30(val, _values, result)
     result = val[0] << val[2]; raise ArgumentError, "invalid date (invalid days #{result[2]} for month #{result[1]})" if result[2] > 31 || (result[2] > 30 && [2,4,6,9,11].include?(result[1])) || (result[2] > 29 && result[1] == 2) 
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.y', 73)
  def _reduce_34(val, _values, result)
     result = val[0] ... val[1] 
    result
  end
.,.,

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_38(val, _values, result)
     result = val[0].send(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 86)
  def _reduce_39(val, _values, result)
     result = 'uncertain!' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_40(val, _values, result)
     result = 'approximate!' 
    result
  end
.,.,

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_45(val, _values, result)
     result = Date.new(val[0,3].zip([1000,100,10]).reduce(0) { |s,(a,b)| s += a * b }); result.unspecified.year[3] = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_46(val, _values, result)
     result = Date.new(val[0,2].zip([1000,100]).reduce(0) { |s,(a,b)| s += a * b }); result.unspecified.year[2,2] = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_47(val, _values, result)
     result = Date.new(val[0]).unspecified!(:month) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_48(val, _values, result)
     result = Date.new(*val[0]).unspecified!(:day) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 102)
  def _reduce_49(val, _values, result)
     result = Date.new(val[0]).unspecified!([:day,:month]) 
    result
  end
.,.,

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_55(val, _values, result)
     result = 0 
    result
  end
.,.,

# reduce 56 omitted

module_eval(<<'.,.,', 'parser.y', 121)
  def _reduce_57(val, _values, result)
     result = 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 122)
  def _reduce_58(val, _values, result)
     result = 2 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 123)
  def _reduce_59(val, _values, result)
     result = 3 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_60(val, _values, result)
     result = 4 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 125)
  def _reduce_61(val, _values, result)
     result = 5 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 126)
  def _reduce_62(val, _values, result)
     result = 6 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 127)
  def _reduce_63(val, _values, result)
     result = 7 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 128)
  def _reduce_64(val, _values, result)
     result = 8 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 129)
  def _reduce_65(val, _values, result)
     result = 9 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_66(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 132)
  def _reduce_67(val, _values, result)
     result = 10 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 133)
  def _reduce_68(val, _values, result)
     result = 11 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_69(val, _values, result)
     result = 12 
    result
  end
.,.,

# reduce 70 omitted

module_eval(<<'.,.,', 'parser.y', 137)
  def _reduce_71(val, _values, result)
     result = 13 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 139)
  def _reduce_72(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 140)
  def _reduce_73(val, _values, result)
     result = 10 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 141)
  def _reduce_74(val, _values, result)
     result = 20 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 142)
  def _reduce_75(val, _values, result)
     result = 21 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 143)
  def _reduce_76(val, _values, result)
     result = 22 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 144)
  def _reduce_77(val, _values, result)
     result = 23 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 146)
  def _reduce_78(val, _values, result)
     result = 0  
    result
  end
.,.,

# reduce 79 omitted

# reduce 80 omitted

module_eval(<<'.,.,', 'parser.y', 150)
  def _reduce_81(val, _values, result)
     result = 24 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 151)
  def _reduce_82(val, _values, result)
     result = 25 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 152)
  def _reduce_83(val, _values, result)
     result = 26 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 153)
  def _reduce_84(val, _values, result)
     result = 27 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 154)
  def _reduce_85(val, _values, result)
     result = 28 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 155)
  def _reduce_86(val, _values, result)
     result = 29 
    result
  end
.,.,

# reduce 87 omitted

module_eval(<<'.,.,', 'parser.y', 158)
  def _reduce_88(val, _values, result)
     result = 30 
    result
  end
.,.,

# reduce 89 omitted

module_eval(<<'.,.,', 'parser.y', 161)
  def _reduce_90(val, _values, result)
     result = 31 
    result
  end
.,.,

# reduce 91 omitted

module_eval(<<'.,.,', 'parser.y', 164)
  def _reduce_92(val, _values, result)
     result = 30 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 165)
  def _reduce_93(val, _values, result)
     result = 40 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 166)
  def _reduce_94(val, _values, result)
     result = 50 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 168)
  def _reduce_95(val, _values, result)
     result = 0 
    result
  end
.,.,

# reduce 96 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module EDTF
