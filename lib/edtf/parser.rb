#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'strscan'

module EDTF
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 186)

  def parse(input)
    @yydebug = !!ENV['DEBUG']
    scan(input)
    do_parse
  end
  
  def next_token
    @stack.shift
  end

  def on_error(tid, val, vstack)
    warn "failed to parse extended date time %s (%s) %s" % [val.inspect, token_to_str(tid) || '?', vstack.inspect]
  end

  def scan(input)
    @src = StringScanner.new(input)
    @stack = []
    tokenize
  end

  private

  def tokenize
    until @src.eos?
      case
      when @src.scan(/T/)
        @stack << [:T, @src.matched]
      when @src.scan(/Z/)
        @stack << [:Z, @src.matched]
      when @src.scan(/\?/)
        @stack << [:UNCERTAIN, @src.matched]
      when @src.scan(/~/)
        @stack << [:APPROXIMATE, @src.matched]
      when @src.scan(/open/i)
        @stack << [:OPEN, @src.matched]
      when @src.scan(/unkn?own/i) # matches 'unkown' typo too
        @stack << [:UNKNOWN, @src.matched]
      when @src.scan(/u/)
        @stack << [:UNSPECIFIED, @src.matched]
      when @src.scan(/y/)
        @stack << [:LONGYEAR, @src.matched]
      when @src.scan(/\+/)
        @stack << [:PLUS, @src.matched]
      when @src.scan(/-/)
        @stack << [:MINUS, @src.matched]
      when @src.scan(/:/)
        @stack << [:COLON, @src.matched]
      when @src.scan(/\//)
        @stack << [:SLASH, @src.matched]
      when @src.scan(/\d/)
        @stack << [['D', @src.matched].join.intern, @src.matched]
      else @src.scan(/./)
        @stack << [:UNMATCHED, @src.rest]
      end
    end
  
    @stack
  end


# -*- racc -*-
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    11,    64,    65,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    63,    36,   149,    22,    11,    23,   -50,
    24,    26,    27,    28,    29,    30,    31,    32,    33,    34,
    38,    39,   138,    22,    83,    24,    26,    27,    28,    29,
    30,    31,    32,    33,    34,   126,   121,    78,    24,    26,
    27,    28,    29,    30,    31,    32,    33,    34,   122,   121,
   116,    68,    59,    69,    72,    93,    94,    95,    96,    92,
    49,   112,   113,    67,    26,    27,    28,    29,    30,    31,
    32,    33,    34,   141,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,   144,    26,    27,    28,    29,    30,    31,
    32,    33,    34,   142,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    93,    94,    95,    96,   106,   107,   108,
   109,   110,   111,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,   164,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    98,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    24,    26,    27,    28,    29,    30,    31,
    32,    33,    34,    26,    27,    28,    29,    30,    31,    32,
    33,    34,    26,    27,    28,    29,    30,    31,    32,    33,
    34,    26,    27,    28,    29,    30,    31,    32,    33,    34,
   161,    59,    69,   131,   132,   133,   129,    59,    69,   131,
   132,   133,   129,    59,    69,   131,   132,   133,   129,    59,
    69,   131,   132,   133,    68,    59,    69,   131,   132,   133,
   102,   103,   104,   140,   139,    68,    59,    69,    72,   102,
   103,   104,    88,    90,    89,    58,    59,    56,    64,    65,
    38,    39,    91,    74,   117,   143,    51,    47,   -51,    41,
   148,    75,    40,   100,   152,   153,   154,   136,   157,   158,
   159,   135,   105,   162,   163,    35,   165,   166 ]

racc_action_check = [
     0,    40,    40,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    40,     4,   136,     0,    47,     0,     4,
    47,    47,    47,    47,    47,    47,    47,    47,    47,    47,
     4,     4,   120,    47,    47,    46,    46,    46,    46,    46,
    46,    46,    46,    46,    46,    90,    90,    46,    77,    77,
    77,    77,    77,    77,    77,    77,    77,    77,    89,    89,
    77,    41,    41,    41,    41,    56,    56,    56,    56,    56,
    23,    72,    72,    41,    23,    23,    23,    23,    23,    23,
    23,    23,    23,   122,   122,   122,   122,   122,   122,   122,
   122,   122,   122,   132,   132,   132,   132,   132,   132,   132,
   132,   132,   132,   129,   129,   129,   129,   129,   129,   129,
   129,   129,   129,   126,   126,   126,   126,   126,   126,   126,
   126,   126,   126,    12,    12,    12,    12,    12,    12,    12,
    12,    12,    12,    11,    11,    11,    11,    11,    11,    11,
    11,    11,    11,   131,   131,   131,   131,   131,   131,   131,
   131,   131,   131,   118,   118,   118,   118,   118,   118,   118,
   118,   118,   118,    45,    45,    45,    45,    45,    45,    45,
    45,    45,    45,   133,   133,   133,   133,   133,   133,   133,
   133,   133,   133,   137,   137,   137,   137,   137,   137,   137,
   137,   137,   137,    69,    69,    69,    69,    69,    69,    69,
    69,    69,    69,   114,   114,   114,   114,   114,   114,   114,
   114,   114,   114,    50,    50,    50,    50,    50,    50,    50,
    50,    50,    50,    86,    86,    86,    86,    86,    86,    86,
    86,    86,    86,    85,    85,    85,    85,    85,    85,    85,
    85,    85,    85,   161,   161,   161,   161,   161,   161,   161,
   161,   161,   161,    58,    58,    58,    58,    58,    58,    58,
    58,    58,    58,    59,    59,    59,    59,    59,    59,    59,
    59,    59,    59,    76,    76,    76,    76,    76,    76,    76,
    76,    76,    76,    48,    48,    48,    48,    48,    48,    48,
    48,    48,    48,    49,    49,    49,    49,    49,    49,    49,
    49,    49,    68,    68,    68,    68,    68,    68,    68,    68,
    68,    64,    64,    64,    64,    64,    64,    64,    64,    64,
   154,   154,   154,   154,   154,   154,   138,   138,   138,   138,
   138,   138,    91,    91,    91,    91,    91,    91,   143,   143,
   143,   143,   143,   143,   153,   153,   153,   153,   153,   153,
   121,   121,   121,   121,   121,    75,    75,    75,    75,    65,
    65,    65,    53,    53,    53,    36,    36,    36,    74,    74,
    79,    79,    54,    42,    78,   127,    35,    21,    13,     9,
   135,    43,     8,    63,   139,   141,   142,   100,   148,   149,
   152,    92,    67,   157,   159,     1,   162,   165 ]

racc_action_pointer = [
    -5,   395,   nil,   nil,    12,   nil,   nil,   nil,   377,   374,
   nil,   125,   115,   371,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   370,   nil,    65,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   376,   357,   nil,   nil,   nil,
    -7,    53,   368,   376,   nil,   155,    27,    12,   275,   284,
   205,   nil,   nil,   359,   366,   nil,    57,   nil,   245,   255,
   nil,   nil,   nil,   363,   302,   351,   nil,   372,   293,   185,
   nil,   nil,    63,   nil,   360,   347,   265,    40,   354,   352,
   nil,   nil,   nil,   nil,   nil,   225,   215,   nil,   nil,    50,
    37,   324,   385,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   382,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   195,   nil,   nil,   nil,   145,   nil,
    26,   342,    75,   nil,   nil,   nil,   105,   369,   nil,    95,
   nil,   135,    85,   165,   nil,   372,    -5,   175,   318,   378,
   nil,   379,   380,   330,   nil,   nil,   nil,   nil,   380,   369,
   nil,   nil,   382,   336,   312,   nil,   nil,   387,   nil,   386,
   nil,   235,   388,   nil,   nil,   389,   nil ]

racc_action_default = [
    -1,  -101,    -2,    -3,    -4,    -5,    -6,    -7,    -8,    -9,
   -10,  -101,  -101,   -33,   -34,   -35,   -36,   -40,   -41,   -42,
   -43,  -101,   -52,  -101,   -59,   -60,   -61,   -62,   -63,   -64,
   -65,   -66,   -67,   -68,   -69,  -101,  -101,   -37,   -38,   -39,
  -101,  -101,    -8,    -9,   -11,  -101,  -101,  -101,   -55,  -101,
  -101,   167,   -12,   -13,  -101,   -16,  -101,   -30,  -101,  -101,
   -83,   -27,   -28,  -101,  -101,  -101,   -29,  -101,  -101,  -101,
   -84,   -91,  -101,   -93,  -101,  -101,  -101,  -101,  -101,   -50,
   -49,   -51,   -53,   -54,   -58,   -56,  -101,   -14,   -18,  -101,
  -101,  -101,  -101,   -78,   -79,   -80,   -81,   -76,   -82,   -77,
   -46,   -70,   -71,   -72,   -73,   -47,   -85,   -86,   -87,   -88,
   -89,   -90,   -92,   -94,  -101,   -26,   -44,   -45,  -101,   -19,
  -101,  -101,  -101,   -74,   -20,   -21,  -101,  -101,   -31,  -101,
   -95,  -101,  -101,  -101,  -100,  -101,  -101,  -101,  -101,  -101,
   -75,  -101,  -101,  -101,   -99,   -96,   -97,   -98,  -101,  -101,
   -57,   -23,  -101,  -101,  -101,   -15,   -32,  -101,   -48,  -101,
   -25,  -101,  -101,   -24,   -22,  -101,   -17 ]

racc_goto_table = [
    50,    48,    12,    71,     4,   156,    21,    13,   127,   123,
   123,   119,   125,     8,    46,   160,   160,   155,    55,     9,
   124,    87,    44,    53,    57,    54,    50,    85,     5,    14,
    15,    16,    17,    18,    19,    97,    20,    71,     3,    80,
    52,   101,     2,    60,     1,    97,   nil,    76,    77,   nil,
    84,    79,    86,    82,    81,   151,   nil,   nil,   nil,   nil,
   nil,    99,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   114,   115,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    84,   118,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   101,
   nil,   nil,   nil,   101,   nil,   nil,    97,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   115,   nil,   nil,   nil,
   137,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   145,   146,   147,   nil,   nil,    97,   150 ]

racc_goto_check = [
    40,    39,    22,    42,     4,    27,    37,    28,    15,    24,
    24,    18,    18,     8,    22,    21,    21,    16,    17,     9,
    19,    13,     6,    12,    26,    14,    40,    39,     5,    29,
    30,    31,    33,    34,    35,    40,    36,    42,     3,    38,
    11,    40,     2,    41,     1,    40,   nil,    22,    22,   nil,
    22,     4,    22,    37,    28,    15,   nil,   nil,   nil,   nil,
   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,    22,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,    22,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    40,
   nil,   nil,   nil,    40,   nil,   nil,    40,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,
    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    22,    22,    22,   nil,   nil,    40,    22 ]

racc_goto_pointer = [
   nil,    44,    42,    38,     4,    28,    11,   nil,    13,    19,
   nil,     4,   -13,   -32,   -11,   -83,  -126,   -18,   -78,   -70,
   nil,  -138,     2,   nil,   -80,   nil,   -12,  -138,     7,    29,
    30,    31,   nil,    32,    33,    34,    36,     6,    -8,   -22,
   -23,     7,   -38,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,     6,     7,    42,    43,
    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   120,   134,    45,    62,    61,    66,   nil,   128,   nil,   nil,
   nil,   nil,    37,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    25,    70,   130,    73 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 26, :_reduce_none,
  1, 27, :_reduce_none,
  1, 27, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 31, :_reduce_8,
  1, 31, :_reduce_9,
  1, 31, :_reduce_10,
  2, 32, :_reduce_11,
  3, 30, :_reduce_12,
  1, 36, :_reduce_none,
  2, 36, :_reduce_14,
  5, 37, :_reduce_15,
  1, 37, :_reduce_none,
  8, 42, :_reduce_17,
  1, 38, :_reduce_18,
  2, 38, :_reduce_19,
  2, 38, :_reduce_20,
  1, 44, :_reduce_none,
  5, 44, :_reduce_22,
  3, 43, :_reduce_23,
  5, 43, :_reduce_24,
  4, 43, :_reduce_25,
  4, 33, :_reduce_26,
  1, 48, :_reduce_none,
  3, 34, :_reduce_28,
  3, 35, :_reduce_29,
  1, 39, :_reduce_none,
  1, 40, :_reduce_none,
  1, 41, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  1, 28, :_reduce_none,
  2, 53, :_reduce_37,
  1, 57, :_reduce_38,
  1, 57, :_reduce_39,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  1, 54, :_reduce_none,
  4, 58, :_reduce_44,
  4, 58, :_reduce_45,
  4, 59, :_reduce_46,
  4, 60, :_reduce_47,
  7, 61, :_reduce_48,
  3, 55, :_reduce_49,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_52,
  1, 63, :_reduce_none,
  1, 63, :_reduce_54,
  2, 56, :_reduce_55,
  3, 56, :_reduce_56,
  5, 64, :_reduce_57,
  2, 64, :_reduce_58,
  1, 47, :_reduce_59,
  1, 47, :_reduce_none,
  1, 65, :_reduce_61,
  1, 65, :_reduce_62,
  1, 65, :_reduce_63,
  1, 65, :_reduce_64,
  1, 65, :_reduce_65,
  1, 65, :_reduce_66,
  1, 65, :_reduce_67,
  1, 65, :_reduce_68,
  1, 65, :_reduce_69,
  2, 49, :_reduce_70,
  2, 49, :_reduce_71,
  2, 49, :_reduce_72,
  2, 49, :_reduce_73,
  1, 45, :_reduce_none,
  2, 45, :_reduce_75,
  2, 66, :_reduce_76,
  2, 66, :_reduce_77,
  2, 66, :_reduce_78,
  2, 66, :_reduce_79,
  2, 66, :_reduce_80,
  2, 66, :_reduce_81,
  2, 51, :_reduce_82,
  1, 51, :_reduce_none,
  1, 67, :_reduce_none,
  2, 67, :_reduce_85,
  2, 67, :_reduce_86,
  2, 67, :_reduce_87,
  2, 67, :_reduce_88,
  2, 67, :_reduce_89,
  2, 67, :_reduce_90,
  1, 68, :_reduce_none,
  2, 68, :_reduce_92,
  1, 50, :_reduce_none,
  2, 50, :_reduce_94,
  1, 46, :_reduce_none,
  2, 46, :_reduce_96,
  2, 46, :_reduce_97,
  2, 46, :_reduce_98,
  2, 52, :_reduce_99,
  1, 52, :_reduce_none ]

racc_reduce_n = 101

racc_shift_n = 167

racc_token_table = {
  false => 0,
  :error => 1,
  :T => 2,
  :Z => 3,
  :PLUS => 4,
  :MINUS => 5,
  :COLON => 6,
  :SLASH => 7,
  :D0 => 8,
  :D1 => 9,
  :D2 => 10,
  :D3 => 11,
  :D4 => 12,
  :D5 => 13,
  :D6 => 14,
  :D7 => 15,
  :D8 => 16,
  :D9 => 17,
  :UNCERTAIN => 18,
  :APPROXIMATE => 19,
  :UNSPECIFIED => 20,
  :UNKNOWN => 21,
  :OPEN => 22,
  :LONGYEAR => 23,
  :UNMATCHED => 24 }

racc_nt_base = 25

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "T",
  "Z",
  "PLUS",
  "MINUS",
  "COLON",
  "SLASH",
  "D0",
  "D1",
  "D2",
  "D3",
  "D4",
  "D5",
  "D6",
  "D7",
  "D8",
  "D9",
  "UNCERTAIN",
  "APPROXIMATE",
  "UNSPECIFIED",
  "UNKNOWN",
  "OPEN",
  "LONGYEAR",
  "UNMATCHED",
  "$start",
  "edtf",
  "level_0_expression",
  "level_1_expression",
  "date",
  "date_time",
  "positive_date",
  "negative_date",
  "year",
  "year_month",
  "year_month_day",
  "time",
  "base_time",
  "zone_offset",
  "hour",
  "minute",
  "second",
  "midnight",
  "zone_offset_hour",
  "positive_zone_offset",
  "d01_13",
  "d01_59",
  "digit",
  "month",
  "d01_12",
  "d01_31",
  "d00_23",
  "d00_59",
  "uncertain_or_approximate_date",
  "unspecified",
  "level_1_interval",
  "long_year_simple",
  "uncertain_or_approximate",
  "unspecified_year",
  "unspecified_month",
  "unspecified_day",
  "unspecified_day_and_month",
  "level_1_start",
  "level_1_end",
  "long_year",
  "positive_digit",
  "d01_23",
  "d01_29",
  "d01_30" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_8(val, _values, result)
     result = Date.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_9(val, _values, result)
     result = Date.new(*val.flatten) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_10(val, _values, result)
     result = Date.new(*val.flatten) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_11(val, _values, result)
     result = Date.new(-1 * val[1].year, val[1].month, val[1].day) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_12(val, _values, result)
     result = DateTime.new(val[0].year, val[0].month, val[0].day, *val[2]) 
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_14(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_15(val, _values, result)
     result = [val[0], val[2], val[4]] 
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_17(val, _values, result)
     result = [24, 0, 0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_18(val, _values, result)
     result = 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_19(val, _values, result)
     result = -1 * val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_20(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_22(val, _values, result)
     result = 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_23(val, _values, result)
     result = Rational(val[0] * 60 + val[2], 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_24(val, _values, result)
     result = Rational(840, 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_25(val, _values, result)
     result = Rational(val[3], 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_26(val, _values, result)
     result = val.zip([1000,100,10,1]).reduce(0) { |s,(a,b)| s += a * b } 
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_28(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_29(val, _values, result)
     result = val[0] << val[2]; raise ArgumentError, "invalid date (invalid days #{result[2]} for month #{result[1]})" if result[2] > 31 || (result[2] > 30 && [2,4,6,9,11].include?(result[1])) || (result[2] > 29 && result[1] == 2) 
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_37(val, _values, result)
     result = val[0].send(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 86)
  def _reduce_38(val, _values, result)
     result = :uncertain! 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_39(val, _values, result)
     result = :approximate! 
    result
  end
.,.,

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_44(val, _values, result)
     result = Date.new(val[0,3].zip([1000,100,10]).reduce(0) { |s,(a,b)| s += a * b }); result.unspecified.year[3] = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 96)
  def _reduce_45(val, _values, result)
     result = Date.new(val[0,2].zip([1000,100]).reduce(0) { |s,(a,b)| s += a * b }); result.unspecified.year[2,2] = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_46(val, _values, result)
     result = Date.new(val[0]).unspecified!(:month) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_47(val, _values, result)
     result = Date.new(*val[0]).unspecified!(:day) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 102)
  def _reduce_48(val, _values, result)
     result = Date.new(val[0]).unspecified!([:day,:month]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 105)
  def _reduce_49(val, _values, result)
     result = Interval.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 50 omitted

# reduce 51 omitted

module_eval(<<'.,.,', 'parser.y', 109)
  def _reduce_52(val, _values, result)
     result = :unknown 
    result
  end
.,.,

# reduce 53 omitted

module_eval(<<'.,.,', 'parser.y', 112)
  def _reduce_54(val, _values, result)
     result = :open 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 115)
  def _reduce_55(val, _values, result)
     result = Date.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_56(val, _values, result)
     result = Date.new(-1 * val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_57(val, _values, result)
     result = val.zip([10000,1000,100,10,1]).reduce(0) { |s,(a,b)| s += a * b } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_58(val, _values, result)
     result = 10 * val[0] + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 127)
  def _reduce_59(val, _values, result)
     result = 0 
    result
  end
.,.,

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.y', 130)
  def _reduce_61(val, _values, result)
     result = 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_62(val, _values, result)
     result = 2 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 132)
  def _reduce_63(val, _values, result)
     result = 3 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 133)
  def _reduce_64(val, _values, result)
     result = 4 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_65(val, _values, result)
     result = 5 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 135)
  def _reduce_66(val, _values, result)
     result = 6 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 136)
  def _reduce_67(val, _values, result)
     result = 7 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 137)
  def _reduce_68(val, _values, result)
     result = 8 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 138)
  def _reduce_69(val, _values, result)
     result = 9 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 140)
  def _reduce_70(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 141)
  def _reduce_71(val, _values, result)
     result = 10 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 142)
  def _reduce_72(val, _values, result)
     result = 11 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 143)
  def _reduce_73(val, _values, result)
     result = 12 
    result
  end
.,.,

# reduce 74 omitted

module_eval(<<'.,.,', 'parser.y', 146)
  def _reduce_75(val, _values, result)
     result = 13 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 148)
  def _reduce_76(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 149)
  def _reduce_77(val, _values, result)
     result = 10 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 150)
  def _reduce_78(val, _values, result)
     result = 20 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 151)
  def _reduce_79(val, _values, result)
     result = 21 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 152)
  def _reduce_80(val, _values, result)
     result = 22 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 153)
  def _reduce_81(val, _values, result)
     result = 23 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 155)
  def _reduce_82(val, _values, result)
     result = 0  
    result
  end
.,.,

# reduce 83 omitted

# reduce 84 omitted

module_eval(<<'.,.,', 'parser.y', 159)
  def _reduce_85(val, _values, result)
     result = 24 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 160)
  def _reduce_86(val, _values, result)
     result = 25 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 161)
  def _reduce_87(val, _values, result)
     result = 26 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 162)
  def _reduce_88(val, _values, result)
     result = 27 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 163)
  def _reduce_89(val, _values, result)
     result = 28 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 164)
  def _reduce_90(val, _values, result)
     result = 29 
    result
  end
.,.,

# reduce 91 omitted

module_eval(<<'.,.,', 'parser.y', 167)
  def _reduce_92(val, _values, result)
     result = 30 
    result
  end
.,.,

# reduce 93 omitted

module_eval(<<'.,.,', 'parser.y', 170)
  def _reduce_94(val, _values, result)
     result = 31 
    result
  end
.,.,

# reduce 95 omitted

module_eval(<<'.,.,', 'parser.y', 173)
  def _reduce_96(val, _values, result)
     result = 30 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 174)
  def _reduce_97(val, _values, result)
     result = 40 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 175)
  def _reduce_98(val, _values, result)
     result = 50 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 177)
  def _reduce_99(val, _values, result)
     result = 0 
    result
  end
.,.,

# reduce 100 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module EDTF
