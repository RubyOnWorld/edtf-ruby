#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'

require 'strscan'

module EDTF
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 208)

  def parse(input)
    @yydebug = !!ENV['DEBUG']
    scan(input)
    do_parse
  end
  
  def next_token
    @stack.shift
  end

  def on_error(tid, val, vstack)
    warn "failed to parse extended date time %s (%s) %s" % [val.inspect, token_to_str(tid) || '?', vstack.inspect]
  end

  def scan(input)
    @src = StringScanner.new(input)
    @stack = []
    tokenize
  end

  private

  def tokenize
    until @src.eos?
      case
      when @src.scan(/\(/)
        @stack << [:LP, @src.matched]
      when @src.scan(/\)/)
        @stack << [:RP, @src.matched]
      when @src.scan(/T/)
        @stack << [:T, @src.matched]
      when @src.scan(/Z/)
        @stack << [:Z, @src.matched]
      when @src.scan(/\?/)
        @stack << [:UNCERTAIN, @src.matched]
      when @src.scan(/~/)
        @stack << [:APPROXIMATE, @src.matched]
      when @src.scan(/open/i)
        @stack << [:OPEN, @src.matched]
      when @src.scan(/unkn?own/i) # matches 'unkown' typo too
        @stack << [:UNKNOWN, @src.matched]
      when @src.scan(/u/)
        @stack << [:UNSPECIFIED, @src.matched]
      when @src.scan(/y/)
        @stack << [:LONGYEAR, @src.matched]
      when @src.scan(/\+/)
        @stack << [:PLUS, @src.matched]
      when @src.scan(/-/)
        @stack << [:MINUS, @src.matched]
      when @src.scan(/:/)
        @stack << [:COLON, @src.matched]
      when @src.scan(/\//)
        @stack << [:SLASH, @src.matched]
      when @src.scan(/\^\w+/)
        @stack << [:CARET, @src.matched[1..-1]]
      when @src.scan(/\d/)
        @stack << [['D', @src.matched].join.intern, @src.matched]
      else @src.scan(/./)
        @stack << [:UNMATCHED, @src.rest]
      end
    end
  
    @stack
  end


# -*- racc -*-
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    12,   133,   132,    27,    29,    30,    31,    32,    33,    34,
    35,    36,    37,   107,    39,    71,    72,    70,    24,   -52,
    25,   172,    63,    76,   142,   143,   144,    71,    72,    68,
    81,    12,    41,    42,    27,    29,    30,    31,    32,    33,
    34,    35,    36,    37,   100,   101,   102,   103,    99,    24,
    90,    27,    29,    30,    31,    32,    33,    34,    35,    36,
    37,    75,    63,    76,    79,   127,    27,    29,    30,    31,
    32,    33,    34,    35,    36,    37,    75,    63,    76,    79,
    85,   140,    63,    76,   142,   143,   144,    53,   137,   132,
    74,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
   155,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
   153,    29,    30,    31,    32,    33,    34,    35,    36,    37,
   152,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
   175,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
   100,   101,   102,   103,   117,   118,   119,   120,   121,   122,
   105,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    27,    29,    30,    31,    32,    33,    34,    35,    36,    37,
    29,    30,    31,    32,    33,    34,    35,    36,    37,    29,
    30,    31,    32,    33,    34,    35,    36,    37,    29,    30,
    31,    32,    33,    34,    35,    36,    37,    75,    63,    76,
   142,   143,   144,   140,    63,    76,   142,   143,   144,   140,
    63,    76,   142,   143,   144,   113,   114,   115,   151,   150,
   108,   109,   110,   111,   113,   114,   115,    62,    63,    60,
    95,    97,    96,   123,   124,    41,    42,    65,   149,   146,
   147,    55,   154,    51,    50,   -53,    44,   159,   160,    43,
    82,   163,   164,   165,   128,   168,   169,   170,    98,   116,
   173,   174,    38,   176,   177 ]

racc_action_check = [
     0,    96,    96,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,    68,     5,    43,    43,    43,     0,     5,
     0,   165,   165,   165,   165,   165,   165,    81,    81,    43,
    45,    51,     5,     5,    51,    51,    51,    51,    51,    51,
    51,    51,    51,    51,    60,    60,    60,    60,    60,    51,
    51,    84,    84,    84,    84,    84,    84,    84,    84,    84,
    84,    82,    82,    82,    82,    84,    49,    49,    49,    49,
    49,    49,    49,    49,    49,    49,    44,    44,    44,    44,
    49,   149,   149,   149,   149,   149,   149,    25,    97,    97,
    44,    25,    25,    25,    25,    25,    25,    25,    25,    25,
    93,    93,    93,    93,    93,    93,    93,    93,    93,    93,
   140,   140,   140,   140,   140,   140,   140,   140,   140,   140,
   143,   143,   143,   143,   143,   143,   143,   143,   143,   143,
   137,   137,   137,   137,   137,   137,   137,   137,   137,   137,
   133,   133,   133,   133,   133,   133,   133,   133,   133,   133,
   129,   129,   129,   129,   129,   129,   129,   129,   129,   129,
    13,    13,    13,    13,    13,    13,    13,    13,    13,    13,
    12,    12,    12,    12,    12,    12,    12,    12,    12,    12,
   125,   125,   125,   125,   125,   125,   125,   125,   125,   125,
    63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
    48,    48,    48,    48,    48,    48,    48,    48,    48,    48,
   144,   144,   144,   144,   144,   144,   144,   144,   144,   144,
   148,   148,   148,   148,   148,   148,   148,   148,   148,   148,
    52,    52,    52,    52,    52,    52,    52,    52,    52,    52,
    92,    92,    92,    92,    92,    92,    92,    92,    92,    92,
    54,    54,    54,    54,    54,    54,    54,    54,    54,    54,
   172,   172,   172,   172,   172,   172,   172,   172,   172,   172,
    83,    83,    83,    83,    83,    83,    83,    83,    83,    83,
    76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
    62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
   142,   142,   142,   142,   142,   142,   142,   142,   142,   142,
    71,    71,    71,    71,    71,    71,    71,    71,    71,    53,
    53,    53,    53,    53,    53,    53,    53,    53,    75,    75,
    75,    75,    75,    75,    75,    75,    75,   164,   164,   164,
   164,   164,   164,    98,    98,    98,    98,    98,    98,   154,
   154,   154,   154,   154,   154,   132,   132,   132,   132,   132,
    70,    70,    70,    70,    72,    72,    72,    39,    39,    39,
    57,    57,    57,    79,    79,    86,    86,    41,   131,    99,
   107,    38,   138,    23,    18,    14,    10,   146,   147,     9,
    46,   150,   152,   153,    85,   159,   160,   163,    58,    74,
   168,   170,     1,   173,   176 ]

racc_action_pointer = [
    -5,   402,   nil,   nil,   nil,    12,   nil,   nil,   nil,   384,
   381,   nil,   162,   152,   378,   nil,   nil,   nil,   358,   nil,
   nil,   nil,   nil,   376,   nil,    82,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   381,   359,
   nil,   356,   nil,     7,    68,    25,   385,   nil,   192,    58,
   nil,    26,   222,   310,   242,   nil,   nil,   367,   392,   nil,
    36,   nil,   282,   182,   nil,   nil,   nil,   nil,    -9,   nil,
   351,   301,   356,   nil,   377,   319,   272,   nil,   nil,   365,
   nil,    19,    53,   262,    43,   372,   355,   nil,   nil,   nil,
   nil,   nil,   232,    92,   nil,   nil,    -7,    80,   335,   373,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   375,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   172,   nil,   nil,   nil,   142,
   nil,   372,   347,   132,   nil,   nil,   nil,   122,   376,   nil,
   102,   nil,   292,   112,   202,   nil,   379,   366,   212,    73,
   385,   nil,   386,   387,   341,   nil,   nil,   nil,   nil,   387,
   374,   nil,   nil,   389,   329,    13,   nil,   nil,   394,   nil,
   393,   nil,   252,   395,   nil,   nil,   396,   nil ]

racc_action_default = [
  -110,  -110,    -1,    -2,    -3,    -4,    -5,    -6,    -7,    -8,
    -9,   -10,  -110,  -110,   -33,   -34,   -35,   -36,   -37,   -42,
   -43,   -44,   -45,  -110,   -54,  -110,   -66,   -68,   -69,   -70,
   -71,   -72,   -73,   -74,   -75,   -76,   -77,   -78,  -110,  -110,
   -38,   -39,   -40,  -110,  -110,    -8,    -9,   -11,  -110,  -110,
   -67,  -110,   -57,  -110,  -110,   178,   -12,   -13,  -110,   -16,
  -110,   -30,  -110,  -110,   -92,   -41,   -27,   -28,  -110,   -61,
  -110,  -110,  -110,   -29,  -110,  -110,  -110,   -93,  -100,  -110,
  -102,  -110,  -110,  -110,  -110,  -110,   -52,   -51,   -53,   -55,
   -56,   -60,   -58,  -110,   -14,   -18,  -110,  -110,  -110,  -110,
   -87,   -88,   -89,   -90,   -85,   -91,   -86,   -48,   -62,   -63,
   -64,   -65,   -79,   -80,   -81,   -82,   -49,   -94,   -95,   -96,
   -97,   -98,   -99,  -101,  -103,  -110,   -26,   -46,   -47,  -110,
   -19,  -110,  -110,  -110,   -83,   -20,   -21,  -110,  -110,   -31,
  -110,  -104,  -110,  -110,  -110,  -109,  -110,  -110,  -110,  -110,
  -110,   -84,  -110,  -110,  -110,  -108,  -105,  -106,  -107,  -110,
  -110,   -59,   -23,  -110,  -110,  -110,   -15,   -32,  -110,   -50,
  -110,   -25,  -110,  -110,   -24,   -22,  -110,   -17 ]

racc_goto_table = [
    13,    78,    23,    52,    94,    54,    14,     5,   138,   171,
   171,   130,   136,    49,   134,   134,    58,    57,   166,    59,
    56,   135,    10,     9,    47,    61,   167,     6,    15,    16,
    17,    92,    18,    54,    19,    20,    21,    22,     4,    78,
    87,     3,   104,     2,    69,    26,    64,     1,    83,    84,
   nil,   112,    91,    89,    93,   104,   nil,    88,    86,   162,
   nil,   nil,   nil,   106,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   125,   126,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    91,   129,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   112,   nil,   nil,   nil,   112,   nil,   nil,
   104,   nil,   nil,   nil,   nil,   126,   nil,   nil,   nil,   148,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   156,   157,   158,   nil,   nil,   nil,   161,   nil,
   nil,   nil,   104 ]

racc_goto_check = [
    23,    46,    39,    41,    14,    42,    29,     5,    16,    22,
    22,    19,    19,    23,    25,    25,    15,    13,    17,    18,
    12,    20,    10,     9,     7,    27,    28,     6,    30,    31,
    32,    41,    33,    42,    35,    36,    37,    38,     4,    46,
    40,     3,    42,     2,    43,    44,    45,     1,    23,    23,
   nil,    42,    23,    39,    23,    42,   nil,    29,     5,    16,
   nil,   nil,   nil,    23,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    23,    23,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    23,    23,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    42,   nil,   nil,   nil,    42,   nil,   nil,
    42,   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    23,    23,    23,   nil,   nil,   nil,    23,   nil,
   nil,   nil,    42 ]

racc_goto_pointer = [
   nil,    47,    43,    41,    38,     7,    27,    12,   nil,    23,
    22,   nil,   -19,   -22,   -53,   -23,   -90,  -136,   -20,   -85,
   -76,   nil,  -155,     0,   nil,   -82,   nil,   -14,  -128,     6,
    28,    29,    30,    32,   nil,    34,    35,    36,    37,     2,
   -11,   -22,   -20,     1,    45,     7,   -43,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,     8,    45,
    46,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   131,   145,    48,    67,    66,    73,   nil,   139,   nil,
   nil,   nil,   nil,   nil,    40,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    28,   nil,   nil,    77,   141,    80 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 29, :_reduce_none,
  1, 30, :_reduce_none,
  1, 30, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 35, :_reduce_8,
  1, 35, :_reduce_9,
  1, 35, :_reduce_10,
  2, 36, :_reduce_11,
  3, 34, :_reduce_12,
  1, 40, :_reduce_none,
  2, 40, :_reduce_14,
  5, 41, :_reduce_15,
  1, 41, :_reduce_none,
  8, 46, :_reduce_17,
  1, 42, :_reduce_18,
  2, 42, :_reduce_19,
  2, 42, :_reduce_20,
  1, 48, :_reduce_none,
  5, 48, :_reduce_22,
  3, 47, :_reduce_23,
  5, 47, :_reduce_24,
  4, 47, :_reduce_25,
  4, 37, :_reduce_26,
  1, 52, :_reduce_none,
  3, 38, :_reduce_28,
  3, 39, :_reduce_29,
  1, 43, :_reduce_none,
  1, 44, :_reduce_none,
  1, 45, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  2, 57, :_reduce_38,
  1, 62, :_reduce_39,
  1, 62, :_reduce_40,
  2, 62, :_reduce_41,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  1, 58, :_reduce_none,
  4, 63, :_reduce_46,
  4, 63, :_reduce_47,
  4, 64, :_reduce_48,
  4, 65, :_reduce_49,
  7, 66, :_reduce_50,
  3, 59, :_reduce_51,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_54,
  1, 68, :_reduce_none,
  1, 68, :_reduce_56,
  2, 60, :_reduce_57,
  3, 60, :_reduce_58,
  5, 69, :_reduce_59,
  2, 69, :_reduce_60,
  3, 61, :_reduce_61,
  2, 71, :_reduce_62,
  2, 71, :_reduce_63,
  2, 71, :_reduce_64,
  2, 71, :_reduce_65,
  1, 32, :_reduce_none,
  2, 72, :_reduce_67,
  1, 51, :_reduce_68,
  1, 51, :_reduce_none,
  1, 70, :_reduce_70,
  1, 70, :_reduce_71,
  1, 70, :_reduce_72,
  1, 70, :_reduce_73,
  1, 70, :_reduce_74,
  1, 70, :_reduce_75,
  1, 70, :_reduce_76,
  1, 70, :_reduce_77,
  1, 70, :_reduce_78,
  2, 53, :_reduce_79,
  2, 53, :_reduce_80,
  2, 53, :_reduce_81,
  2, 53, :_reduce_82,
  1, 49, :_reduce_none,
  2, 49, :_reduce_84,
  2, 73, :_reduce_85,
  2, 73, :_reduce_86,
  2, 73, :_reduce_87,
  2, 73, :_reduce_88,
  2, 73, :_reduce_89,
  2, 73, :_reduce_90,
  2, 55, :_reduce_91,
  1, 55, :_reduce_none,
  1, 74, :_reduce_none,
  2, 74, :_reduce_94,
  2, 74, :_reduce_95,
  2, 74, :_reduce_96,
  2, 74, :_reduce_97,
  2, 74, :_reduce_98,
  2, 74, :_reduce_99,
  1, 75, :_reduce_none,
  2, 75, :_reduce_101,
  1, 54, :_reduce_none,
  2, 54, :_reduce_103,
  1, 50, :_reduce_none,
  2, 50, :_reduce_105,
  2, 50, :_reduce_106,
  2, 50, :_reduce_107,
  2, 56, :_reduce_108,
  1, 56, :_reduce_none ]

racc_reduce_n = 110

racc_shift_n = 178

racc_token_table = {
  false => 0,
  :error => 1,
  :T => 2,
  :Z => 3,
  :PLUS => 4,
  :MINUS => 5,
  :COLON => 6,
  :SLASH => 7,
  :D0 => 8,
  :D1 => 9,
  :D2 => 10,
  :D3 => 11,
  :D4 => 12,
  :D5 => 13,
  :D6 => 14,
  :D7 => 15,
  :D8 => 16,
  :D9 => 17,
  :LP => 18,
  :RP => 19,
  :UNCERTAIN => 20,
  :APPROXIMATE => 21,
  :UNSPECIFIED => 22,
  :UNKNOWN => 23,
  :OPEN => 24,
  :LONGYEAR => 25,
  :CARET => 26,
  :UNMATCHED => 27 }

racc_nt_base = 28

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "T",
  "Z",
  "PLUS",
  "MINUS",
  "COLON",
  "SLASH",
  "D0",
  "D1",
  "D2",
  "D3",
  "D4",
  "D5",
  "D6",
  "D7",
  "D8",
  "D9",
  "LP",
  "RP",
  "UNCERTAIN",
  "APPROXIMATE",
  "UNSPECIFIED",
  "UNKNOWN",
  "OPEN",
  "LONGYEAR",
  "CARET",
  "UNMATCHED",
  "$start",
  "edtf",
  "level_0_expression",
  "level_1_expression",
  "level_2_expression",
  "date",
  "date_time",
  "positive_date",
  "negative_date",
  "year",
  "year_month",
  "year_month_day",
  "time",
  "base_time",
  "zone_offset",
  "hour",
  "minute",
  "second",
  "midnight",
  "zone_offset_hour",
  "positive_zone_offset",
  "d01_13",
  "d01_59",
  "digit",
  "month",
  "d01_12",
  "d01_31",
  "d00_23",
  "d00_59",
  "uncertain_or_approximate_date",
  "unspecified",
  "level_1_interval",
  "long_year_simple",
  "season",
  "uncertain_or_approximate",
  "unspecified_year",
  "unspecified_month",
  "unspecified_day",
  "unspecified_day_and_month",
  "level_1_start",
  "level_1_end",
  "long_year",
  "positive_digit",
  "season_number",
  "season_qualified",
  "d01_23",
  "d01_29",
  "d01_30" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.y', 26)
  def _reduce_8(val, _values, result)
     result = Date.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_9(val, _values, result)
     result = Date.new(*val.flatten) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_10(val, _values, result)
     result = Date.new(*val.flatten) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_11(val, _values, result)
     result = Date.new(-1 * val[1].year, val[1].month, val[1].day) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_12(val, _values, result)
     result = DateTime.new(val[0].year, val[0].month, val[0].day, *val[2]) 
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_14(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_15(val, _values, result)
     result = [val[0], val[2], val[4]] 
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_17(val, _values, result)
     result = [24, 0, 0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_18(val, _values, result)
     result = 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_19(val, _values, result)
     result = -1 * val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_20(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_22(val, _values, result)
     result = 0 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_23(val, _values, result)
     result = Rational(val[0] * 60 + val[2], 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_24(val, _values, result)
     result = Rational(840, 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 53)
  def _reduce_25(val, _values, result)
     result = Rational(val[3], 1440) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_26(val, _values, result)
     result = val.zip([1000,100,10,1]).reduce(0) { |s,(a,b)| s += a * b } 
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.y', 59)
  def _reduce_28(val, _values, result)
     result = [val[0], val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_29(val, _values, result)
     result = val[0] << val[2]; raise ArgumentError, "invalid date (invalid days #{result[2]} for month #{result[1]})" if result[2] > 31 || (result[2] > 30 && [2,4,6,9,11].include?(result[1])) || (result[2] > 29 && result[1] == 2) 
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_38(val, _values, result)
     result = val[0]; val[1].each { |m| result.send(m) } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_39(val, _values, result)
     result = [:uncertain!] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 88)
  def _reduce_40(val, _values, result)
     result = [:approximate!] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_41(val, _values, result)
     result = [:uncertain!, :approximate!] 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_46(val, _values, result)
     result = Date.new(val[0,3].zip([1000,100,10]).reduce(0) { |s,(a,b)| s += a * b }); result.unspecified.year[3] = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_47(val, _values, result)
     result = Date.new(val[0,2].zip([1000,100]).reduce(0) { |s,(a,b)| s += a * b }); result.unspecified.year[2,2] = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_48(val, _values, result)
     result = Date.new(val[0]).unspecified!(:month) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 102)
  def _reduce_49(val, _values, result)
     result = Date.new(*val[0]).unspecified!(:day) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 104)
  def _reduce_50(val, _values, result)
     result = Date.new(val[0]).unspecified!([:day,:month]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_51(val, _values, result)
     result = Interval.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 52 omitted

# reduce 53 omitted

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_54(val, _values, result)
     result = :unknown 
    result
  end
.,.,

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.y', 114)
  def _reduce_56(val, _values, result)
     result = :open 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 117)
  def _reduce_57(val, _values, result)
     result = Date.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 118)
  def _reduce_58(val, _values, result)
     result = Date.new(-1 * val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_59(val, _values, result)
     result = val.zip([10000,1000,100,10,1]).reduce(0) { |s,(a,b)| s += a * b } 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 121)
  def _reduce_60(val, _values, result)
     result = 10 * val[0] + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 124)
  def _reduce_61(val, _values, result)
     result = Date.new(val[0]); result.season = val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 126)
  def _reduce_62(val, _values, result)
     result = 21 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 127)
  def _reduce_63(val, _values, result)
     result = 22 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 128)
  def _reduce_64(val, _values, result)
     result = 23 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 129)
  def _reduce_65(val, _values, result)
     result = 24 
    result
  end
.,.,

# reduce 66 omitted

module_eval(<<'.,.,', 'parser.y', 145)
  def _reduce_67(val, _values, result)
     result = val[0]; result.qualifier = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 149)
  def _reduce_68(val, _values, result)
     result = 0 
    result
  end
.,.,

# reduce 69 omitted

module_eval(<<'.,.,', 'parser.y', 152)
  def _reduce_70(val, _values, result)
     result = 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 153)
  def _reduce_71(val, _values, result)
     result = 2 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 154)
  def _reduce_72(val, _values, result)
     result = 3 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 155)
  def _reduce_73(val, _values, result)
     result = 4 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 156)
  def _reduce_74(val, _values, result)
     result = 5 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 157)
  def _reduce_75(val, _values, result)
     result = 6 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 158)
  def _reduce_76(val, _values, result)
     result = 7 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 159)
  def _reduce_77(val, _values, result)
     result = 8 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 160)
  def _reduce_78(val, _values, result)
     result = 9 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 162)
  def _reduce_79(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 163)
  def _reduce_80(val, _values, result)
     result = 10 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 164)
  def _reduce_81(val, _values, result)
     result = 11 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 165)
  def _reduce_82(val, _values, result)
     result = 12 
    result
  end
.,.,

# reduce 83 omitted

module_eval(<<'.,.,', 'parser.y', 168)
  def _reduce_84(val, _values, result)
     result = 13 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 170)
  def _reduce_85(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 171)
  def _reduce_86(val, _values, result)
     result = 10 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 172)
  def _reduce_87(val, _values, result)
     result = 20 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 173)
  def _reduce_88(val, _values, result)
     result = 21 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 174)
  def _reduce_89(val, _values, result)
     result = 22 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 175)
  def _reduce_90(val, _values, result)
     result = 23 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 177)
  def _reduce_91(val, _values, result)
     result = 0  
    result
  end
.,.,

# reduce 92 omitted

# reduce 93 omitted

module_eval(<<'.,.,', 'parser.y', 181)
  def _reduce_94(val, _values, result)
     result = 24 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 182)
  def _reduce_95(val, _values, result)
     result = 25 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 183)
  def _reduce_96(val, _values, result)
     result = 26 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 184)
  def _reduce_97(val, _values, result)
     result = 27 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 185)
  def _reduce_98(val, _values, result)
     result = 28 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 186)
  def _reduce_99(val, _values, result)
     result = 29 
    result
  end
.,.,

# reduce 100 omitted

module_eval(<<'.,.,', 'parser.y', 189)
  def _reduce_101(val, _values, result)
     result = 30 
    result
  end
.,.,

# reduce 102 omitted

module_eval(<<'.,.,', 'parser.y', 192)
  def _reduce_103(val, _values, result)
     result = 31 
    result
  end
.,.,

# reduce 104 omitted

module_eval(<<'.,.,', 'parser.y', 195)
  def _reduce_105(val, _values, result)
     result = 30 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 196)
  def _reduce_106(val, _values, result)
     result = 40 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 197)
  def _reduce_107(val, _values, result)
     result = 50 + val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 199)
  def _reduce_108(val, _values, result)
     result = 0 
    result
  end
.,.,

# reduce 109 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module EDTF
